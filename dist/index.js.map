{"version":3,"file":"index.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../src/StateMachine.js","../src/index.js"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import React, { useLayoutEffect, useState } from 'react'\r\n// @ts-ignore\r\nimport { Types } from './types.t'\r\n\r\n/**\r\n * @typedef {string} StoreNameType\r\n */\r\n\r\nclass StateMachine {\r\n    constructor() {\r\n        this.state = {}\r\n        this.actions = {}\r\n        this.middleWare = {}\r\n        this.listener = {}\r\n        this.initialState = {}\r\n        this.store = {}\r\n        // @ts-ignore\r\n        this.storeDict = []\r\n        this.selectors = {}\r\n        this.selections = {}\r\n        this.history = {}\r\n        this.props = {}\r\n    }\r\n\r\n    /**\r\n     * @name TEST#store\r\n     * @type {Object<string, function>}\r\n     */\r\n\r\n    /**\r\n     * @template {import('./types.t').ActionsType} ActionT\r\n     * @template {import('./types.t').SelectorsType} SelectorsT\r\n     * @template {import('./types.t').InitialStateType} InitialStateT\r\n     * @template {import('./types.t').MiddleWareType<keyof ActionT>} MiddleWareT\r\n     * Creates reducer\r\n     * @param {object} reducerProps Reducer properties\r\n     * @param {InitialStateT} reducerProps.initialState Reducer initial state\r\n     * @param {ActionT} reducerProps.actions Reducer actions\r\n     * @param {MiddleWareT=} reducerProps.middleWare Reducer middleWare\r\n     * @param {SelectorsT=} reducerProps.selectors Reducer selectors\r\n     */\r\n    createReducer = ({ initialState, actions, selectors, middleWare}) => {\r\n        const that = this\r\n\r\n        const defaultOptions = {\r\n            useDiffuseAsync: true,\r\n            useDiffuseInitializeState: true,\r\n            useDiffuseWebsocket: true,\r\n            plugins: []\r\n        }\r\n\r\n        const config = {\r\n            ...defaultOptions,\r\n        }\r\n\r\n        /**\r\n        * @template {import('./types.t').FuseBoxNameType} NameT\r\n        * Create fuse box (Formally named createStore)\r\n        * @param {NameT} fuseBoxName Fuse box name\r\n        * @param {object|null} props Fuse box props \r\n        */\r\n        const create = (fuseBoxName, props = null) => {\r\n            const diffuseState = {\r\n                diffuse: {\r\n                    ...(config.useDiffuseAsync === true && {\r\n                        loading: false,\r\n                        error: false\r\n                    }),\r\n                    ...(config.useDiffuseWebsocket === true && {\r\n                        connectionStatus: 'DISCONNECTED'\r\n                    })\r\n                }\r\n            }\r\n\r\n            const initState = {\r\n                ...(Object.keys(diffuseState.diffuse).length !== 0 && {...diffuseState}),\r\n                ...initialState\r\n            }\r\n\r\n            // Set store initial state\r\n            // @ts-ignore\r\n            that.initialState[fuseBoxName] = {\r\n                ...initState\r\n            }\r\n\r\n            // Initialize store\r\n            // @ts-ignore\r\n            that.state[fuseBoxName] = {\r\n                ...initState\r\n            }\r\n\r\n            // @ts-ignore\r\n            that.selectors[fuseBoxName] = {}\r\n            // @ts-ignore\r\n            that.selections[fuseBoxName] = {}\r\n            // @ts-ignore\r\n            that.actions[fuseBoxName] = {}\r\n\r\n            // @ts-ignore\r\n            that.props[fuseBoxName] = props\r\n\r\n            // Set store actions\r\n            /**\r\n                * @type {import('./types.t').ActionsType}\r\n                */\r\n            let newActions = {\r\n                ...(config.useDiffuseInitializeState === true && {INITIALIZE_STATE: ({state, payload = {}}) => {\r\n                    return {\r\n                        ...initState,\r\n                        ...payload\r\n                    }\r\n                }}),\r\n                ...(config.useDiffuseAsync === true && {\r\n                    /**\r\n                        * \r\n                        * @param {import('./types.t').ActionPropsType} params\r\n                        * @returns {object}\r\n                        */  \r\n                    LOADING: ({state, payload}) => {\r\n                        return {\r\n                            diffuse: {\r\n                                ...state.diffuse,\r\n                                loading: true,\r\n                                error: false\r\n                            },\r\n                            ...payload\r\n                        }\r\n                    },\r\n                    /**\r\n                        * \r\n                        * @param {import('./types.t').ActionPropsType} params\r\n                        * @returns {object}\r\n                        */ \r\n                    SUCCESS: ({state, payload}) => {\r\n                        return {\r\n                            diffuse: {\r\n                                ...state.diffuse,\r\n                                loading: false,\r\n                                error: false\r\n                            },\r\n                            ...payload\r\n                        }\r\n                    },\r\n                    /**\r\n                        * \r\n                        * @param {import('./types.t').ActionPropsType} params\r\n                        * @returns {object}\r\n                        */ \r\n                    PROGRESS: ({state, payload}) => {\r\n                        return {\r\n                            ...payload\r\n                        }\r\n                    },\r\n                    /**\r\n                        * \r\n                        * @param {import('./types.t').ActionPropsType} params\r\n                        * @returns {object}\r\n                        */ \r\n                    FAIL: ({state, payload}) => {\r\n                        return {\r\n                            diffuse: {\r\n                                ...state.diffuse,\r\n                                loading: false,\r\n                                error: true\r\n                            },\r\n                            ...payload\r\n                        }\r\n                    },\r\n                }),\r\n                ...(config.useDiffuseWebsocket === true && {\r\n                    /**\r\n                        * \r\n                        * @param {import('./types.t').ActionPropsType} params\r\n                        * @returns {object}\r\n                        */ \r\n                    MESSAGE_RECIEVED: ({state, payload}) => {\r\n                        return {\r\n                            ...payload\r\n                        }\r\n                    },\r\n                    /**\r\n                        * \r\n                        * @param {import('./types.t').ActionPropsType} params\r\n                        * @returns {object}\r\n                        */ \r\n                    EMIT: ({state, payload}) => {\r\n                        return {\r\n                            ...payload\r\n                        }\r\n                    },\r\n                    /**\r\n                        * \r\n                        * @param {import('./types.t').ActionPropsType} params\r\n                        * @returns {object}\r\n                        */ \r\n                    CONNECT: ({state, payload}) => {\r\n                        return {\r\n                            diffuse: {\r\n                                ...state.diffuse,\r\n                                connectionStatus: 'CONNECTED'\r\n                            },\r\n                            ...payload\r\n                        }\r\n                    },\r\n                    /**\r\n                        * \r\n                        * @param {import('./types.t').ActionPropsType} params\r\n                        * @returns {object}\r\n                        */ \r\n                    DISCONNECT: ({state, payload}) => {\r\n                        return {\r\n                            diffuse: {\r\n                                ...state.diffuse,\r\n                                connectionStatus: 'DISCONNECTED'\r\n                            },\r\n                            ...payload\r\n                        }\r\n                    },\r\n                    /**\r\n                        * \r\n                        * @param {import('./types.t').ActionPropsType} params\r\n                        * @returns {object}\r\n                        */ \r\n                    CONNECT_ERROR: ({state, payload}) => {\r\n                        return {\r\n                            diffuse: {\r\n                                ...state.diffuse,\r\n                                connectionStatus: 'FAILED'\r\n                            },\r\n                            ...payload\r\n                        }\r\n                    }\r\n                }),\r\n                ...actions\r\n            }\r\n\r\n            // @ts-ignore\r\n            that.history[fuseBoxName] = {\r\n                undo: [],\r\n                redo: []\r\n            }\r\n\r\n            // Add store to dictionary\r\n            // @ts-ignore\r\n            that.storeDict[fuseBoxName] = true\r\n\r\n            // Create listener for store\r\n            // @ts-ignore\r\n            that.listener[fuseBoxName] = []\r\n\r\n            // Add middleware for store\r\n            // @ts-ignore\r\n            that.middleWare[fuseBoxName] = {\r\n                beforeWare: [],\r\n                afterWare: []\r\n            }\r\n            \r\n            // Create store object\r\n            const store = {\r\n                name: fuseBoxName,\r\n                getHistory: () => {\r\n                    // @ts-ignore\r\n                    return that.history[fuseBoxName]\r\n                },\r\n                /**\r\n                    * Get state from state machine\r\n                    * @returns {import('./types.t').FuseStateType}\r\n                    */\r\n                getState: () => {\r\n                    // @ts-ignore\r\n                    return that.state?.[fuseBoxName]\r\n                },\r\n                /**\r\n                    * \r\n                    * @returns {import('./types.t').FuseStateType}\r\n                    */\r\n                getInitialState: () => {\r\n                    // @ts-ignore\r\n                    return that.initialState?.[fuseBoxName]\r\n                },\r\n                // @ts-ignore\r\n                dispatch: ({ type, payload, callback } = {}) => {\r\n                    // @ts-ignore\r\n                    if (that.actions[fuseBoxName][type] === undefined) {\r\n                        console.warn(\"Action doesn't exist.\")\r\n                        return\r\n                    }\r\n\r\n                    that.dispatch(fuseBoxName)({\r\n                        type: type,\r\n                        payload: payload ?? undefined,\r\n                        callback: callback\r\n                    })\r\n                },\r\n                /**\r\n                    * Get a fuse action\r\n                    * @param {keyof ActionT} actionName\r\n                    * @returns {import('./types.t').ActionType} \r\n                    */\r\n                getAction: (actionName) => {\r\n                    /**\r\n                        * @type {import('./types.t').ActionType}\r\n                        * @param {object|undefined} payload Payload\r\n                        */\r\n                    let action = (payload, callback) => store.dispatch({ type: actionName, payload, callback })\r\n                    return action\r\n                },\r\n                /**\r\n                    * Get all fuse actions\r\n                    * @returns {Record<keyof ActionT, import('./types.t').ActionType>}\r\n                    */\r\n                getActions: () => {\r\n                    /**\r\n                        * @type {Record<keyof ActionT, import('./types.t').ActionType>}\r\n                        */\r\n                    // @ts-ignore\r\n                    let actions = {}\r\n                        \r\n                    /**\r\n                        * @param {Record<keyof ActionT, import('./types.t').ActionType>} prev\r\n                        * @param {keyof ActionT} actionName\r\n                        */\r\n                    let reduceFunction = (prev, actionName) => {\r\n                        /**\r\n                            * @type {Record<keyof ActionT, import('./types.t').ActionType>}\r\n                            *\r\n                            */\r\n                        prev[actionName] = store.getAction(actionName)\r\n                        return prev\r\n                    }\r\n                    \r\n                    /**\r\n                        * @type {Record<keyof ActionT, import('./types.t').ActionType>}\r\n                        */\r\n                    // @ts-ignore\r\n                    actions = Object.keys(that.actions?.[fuseBoxName]).reduce(reduceFunction, actions)\r\n\r\n                    return actions\r\n                },\r\n                // @ts-ignore\r\n                addAction: (actionName, action) => {\r\n                    // @ts-ignore\r\n                    that.actions[fuseBoxName][actionName] = {function: action}\r\n                },\r\n                // @ts-ignore\r\n                removeAction: (actionName) => {\r\n                    // @ts-ignore\r\n                    delete that?.actions?.[fuseBoxName][actionName]\r\n                },\r\n                addMiddleWare: ({afterWare = null, beforeWare = null} = {}) => {\r\n                    if (afterWare !== null) {\r\n                        // @ts-ignore\r\n                        that.middleWare?.[fuseBoxName].afterWare.push(afterWare)\r\n                    }\r\n                    else if (beforeWare !== null) {\r\n                        // @ts-ignore\r\n                        that.middleWare?.[fuseBoxName].beforeWare.push(beforeWare)\r\n                    }\r\n                },\r\n                /**\r\n                    * Get selector function\r\n                    * @param {keyof SelectorsT} selectorName \r\n                    * @returns {Function[]}\r\n                    */\r\n                getSelector: (selectorName) => {\r\n                    // @ts-ignore\r\n                    return that.selectors[fuseBoxName][selectorName]\r\n                },\r\n                /**\r\n                    * Get selector function\r\n                    * @param {keyof SelectorsT} selectorName \r\n                    * @returns {Function[]}\r\n                    */\r\n                getSelection: (selectorName) => {\r\n                    // @ts-ignore\r\n                    return that.selections[fuseBoxName][selectorName]\r\n                },\r\n                /**\r\n                    * Get selector function \r\n                    * @returns {Record<keyof SelectorsT, import('./types.t').useSelectionsType>}\r\n                    */\r\n                getSelections: () => {\r\n                    // @ts-ignore\r\n                    return that.selections[fuseBoxName]\r\n                },\r\n                /**\r\n                    * Get selector function\r\n                    * @returns {Record<keyof SelectorsT, import('./types.t').useSelectionsType>}\r\n                    */\r\n                getSelectors: () => {\r\n                    // @ts-ignore\r\n                    return that.selectors[fuseBoxName]\r\n                },\r\n                // @ts-ignore\r\n                createSelector: function createSelector(selectorName, ...args) {\r\n                    // @ts-ignore\r\n                    that.selectors[fuseBoxName][selectorName] = args\r\n                    // @ts-ignore\r\n                    that.selections[fuseBoxName][selectorName] = () => that.useSelectionHook(store, args)\r\n                },\r\n                getMiddleWare: () => {\r\n                    // @ts-ignore\r\n                    return that.middleWare[fuseBoxName]\r\n                },\r\n                undo: () => {\r\n                    const history = store.getHistory()\r\n\r\n                    if (history.undo.length > 0) {\r\n                        let lastState = history.undo.pop()\r\n                        let currentState = store.getState()\r\n                        history.redo.push(currentState)\r\n                        that.dispatchReducerListeners(fuseBoxName, lastState, true)\r\n                    } else {\r\n                        console.log('Nothing to undo')\r\n                    }\r\n                },\r\n                redo: () => {\r\n                    const history = store.getHistory()\r\n\r\n                    if (history.redo.length > 0) {\r\n                        let nextState = history.redo.pop()\r\n                        let currentState = store.getState()\r\n                        history.undo.push(currentState)\r\n                        that.dispatchReducerListeners(fuseBoxName, nextState, true)\r\n                    } else {\r\n                        console.log('Nothing to redo')\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Add actions\r\n            for (const actionName in newActions) {\r\n                store.addAction(actionName, newActions[actionName])\r\n            }\r\n\r\n            // Add before ware \r\n            //@ts-ignore\r\n            if (middleWare?.beforeWare) {\r\n                // @ts-ignore\r\n                for (const index in middleWare.beforeWare) {\r\n                    // @ts-ignore\r\n                    store.addMiddleWare({beforeWare: middleWare.beforeWare[index]})\r\n                }\r\n            }\r\n\r\n            // Add afterware\r\n            // @ts-ignore\r\n            if (middleWare?.afterWare) {\r\n                // @ts-ignore\r\n                for (const index in middleWare.afterWare) {\r\n                    // @ts-ignore\r\n                    store.addMiddleWare({afterWare: middleWare.afterWare[index]})\r\n                }\r\n            }\r\n\r\n            // Add selectors\r\n            for (const selectorName in selectors) {\r\n                store.createSelector(selectorName, ...selectors[selectorName])\r\n            }\r\n\r\n            // Add store object to stores\r\n            // @ts-ignore\r\n            that.store[fuseBoxName] = store\r\n            \r\n            /**\r\n                * @type {import('./types.t').FuseBoxType<NameT, ActionT, SelectorsT, InitialStateT>}\r\n                */\r\n            let fuseBox = {\r\n                name: fuseBoxName,\r\n                actions: store.getActions(),\r\n                useState: () => {\r\n                    const [fuse, setFuse] = useState(store.getState())\r\n                \r\n                    useLayoutEffect(() => {\r\n                        /**\r\n                            * \r\n                            * @param {object} newStore \r\n                            */\r\n                        const handleReducerChange = (newStore) => {\r\n                            setFuse(newStore)\r\n                        }\r\n                \r\n                        this.addFuseListener(store.name, handleReducerChange)\r\n                \r\n                        return () => {\r\n                            this.removeFuseListener(store.name, handleReducerChange)\r\n                        }\r\n                    }, [])\r\n                    \r\n                    /**\r\n                        * @type {InitialStateT & import('./types.t').DiffuseStateType}\r\n                        */\r\n                    // @ts-ignore\r\n                    const state = fuse\r\n                    return state\r\n                },\r\n                selectors: store.getSelections(),\r\n            }\r\n            \r\n            return fuseBox\r\n        }\r\n        \r\n        const reducer = {\r\n            createFuseBox: create,\r\n            /**\r\n             * @deprecated Use createFuseBox\r\n             */\r\n            createStore: create\r\n        }\r\n\r\n        return reducer\r\n    }\r\n\r\n    // @ts-ignore\r\n    mergeSelectors(selector, currentState) {\r\n        let stateSelections, value\r\n        \r\n        if (selector.length === 0) {\r\n            throw 'DiffuseError: No selectors specified'\r\n        }\r\n    \r\n        if (selector.length === 1) {\r\n            value = selector[0](currentState)\r\n        }\r\n        else {\r\n            const selectors = [...selector]\r\n            let lastSelector = selectors.pop()\r\n            \r\n            stateSelections = selectors.map((arg) => {\r\n                return arg(currentState)\r\n            })\r\n    \r\n            value = lastSelector\r\n        }\r\n    \r\n        return {\r\n            value,\r\n            ...(stateSelections && {stateSelections: stateSelections})\r\n        }\r\n    }\r\n\r\n    // @ts-ignore\r\n    useSelectionHook = (store,selector) => {\r\n        let selection = this.mergeSelectors(selector, store.getState())\r\n        const [fuseSelection, setFuseSelection] = useState(selection)\r\n    \r\n        useLayoutEffect(() => {\r\n            // @ts-ignore\r\n            const handleReducerChange = (newStore) => {\r\n                const newFuseSelection = this.mergeSelectors(selector, newStore)\r\n                let shouldUpdate = false\r\n                if (newFuseSelection.value instanceof Function) {\r\n                    // @ts-ignore\r\n                    for (let i = 0; i < newFuseSelection.stateSelections.length; i++) {\r\n                        // @ts-ignore\r\n                        if (newFuseSelection.stateSelections[i] !== fuseSelection.stateSelections[i]) {\r\n                            shouldUpdate = true\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n                else if (newFuseSelection.value !== fuseSelection.value) {\r\n                    shouldUpdate = true      \r\n                }  \r\n    \r\n                if (shouldUpdate) {\r\n                    setFuseSelection(newFuseSelection)\r\n                }\r\n            }\r\n    \r\n            this.addFuseListener(store.name, handleReducerChange)\r\n    \r\n            return () => {\r\n                this.removeFuseListener(store.name, handleReducerChange)\r\n            }\r\n        }, [])\r\n    \r\n        if (fuseSelection.value instanceof Function) {\r\n            // @ts-ignore\r\n            return fuseSelection.value(...fuseSelection.stateSelections)\r\n        }\r\n        else {\r\n            return fuseSelection.value\r\n        }\r\n    }\r\n\r\n    // @ts-ignore\r\n    addFuseListener(storeName, func) {\r\n        // If storeName exist in dictionary\r\n        if (this.storeDict[storeName]) {\r\n            // If listeners for storeName were not yet defined\r\n            if (this.listener[storeName] === undefined) {\r\n                // Define listeners for storeName\r\n                this.listener[storeName] = []\r\n            }\r\n\r\n            // Push function to listener\r\n            this.listener[storeName].push(func)\r\n        } else {\r\n            console.warn(\"Reducer doesn't exist\")\r\n        }\r\n    }\r\n\r\n    // @ts-ignore\r\n    removeFuseListener(storeName, func) {\r\n        // If storeName exist in dictionary\r\n        if (this.storeDict.includes(storeName)) {\r\n            // Get listeners for reducer\r\n            const reducerListener = this.listener?.[storeName]\r\n\r\n            // If reducer listener is not undefined\r\n            if (reducerListener !== undefined) {\r\n                // Get index of function to remove from reducer listener\r\n                const indexToRemove = reducerListener.indexOf(func)\r\n\r\n                // Remove listening function from reducer listener\r\n                this.listener[storeName].splice(indexToRemove, indexToRemove + 1)\r\n            } else {\r\n                // Reducer does not exist\r\n                console.warn(\"Reducer doesn't exist\")\r\n            }\r\n        } else {\r\n            // Reducer does not exist\r\n            console.warn(\"Reducer doesn't exist\")\r\n        }\r\n    }\r\n\r\n    // @ts-ignore\r\n    dispatchReducerListeners(storeName, result, dontSaveToHistory = false) {\r\n        // If there is a result to push\r\n        if (result !== undefined) {\r\n            if (dontSaveToHistory === false) {\r\n                if (this.history[storeName].redo.length !== 0) {\r\n                    this.history[storeName].redo = []\r\n                }\r\n            }\r\n            const undoCount = this.history[storeName]?.undo.length\r\n            const currentState = this.getCurrentState(storeName)\r\n            if (dontSaveToHistory === false) {\r\n                if ((undoCount !== 0 && this.history[storeName]?.undo[undoCount - 1] !== currentState) || undoCount === 0) {\r\n                    this.history[storeName].undo.push(this.getCurrentState(storeName))\r\n                }\r\n            }\r\n\r\n            // Set State\r\n            this.state[storeName] = {\r\n                ...this.getCurrentState(storeName),\r\n                ...result\r\n            }\r\n\r\n            // If storeName exist in listeners\r\n            if (this.listener[storeName] !== undefined) {\r\n                // For each function listening\r\n                for (let i = 0; i < this.listener[storeName].length; i++) {\r\n                    // Dispatch listening functions\r\n                    this.listener[storeName][i](this.state[storeName])\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // @ts-ignore\r\n    getCurrentState(storeName) {\r\n        return this.state[storeName]\r\n    }\r\n\r\n    // @ts-ignore\r\n    getAction(storeName, actionName) {\r\n        return this.actions?.[storeName]?.[actionName] ?? null\r\n    }\r\n\r\n    // @ts-ignore\r\n    getFromMiddleWare(storeName) {\r\n        // @ts-ignore\r\n        return (middleWare, { type = '', payload = null }) => {\r\n            let result = middleWare(storeName, this.getCurrentState(storeName), {type, payload})\r\n\r\n            return result\r\n        }\r\n    }\r\n\r\n    // @ts-ignore\r\n    async runAction(storeName, action, payload, callback = () => (undefined)) {\r\n        // Initialize results\r\n        let result\r\n        \r\n        // Create stores object\r\n        const stores = Object.keys(this.store).reduce((previous, current) => {\r\n            previous[this.store[current].name] = {\r\n                state: this.store[current].getState(),\r\n                actions: this.store[current].getActions()\r\n            }\r\n\r\n            return previous\r\n        }, {})\r\n\r\n        // Get store\r\n        const store = stores[storeName]\r\n        \r\n        // Get store actions\r\n        const actions = store.actions\r\n\r\n        // If action is a function\r\n        if (action instanceof Function) {\r\n            // Get result of action\r\n            result = action({\r\n                state: this.getCurrentState(storeName),\r\n                payload: payload,\r\n                callback: callback,\r\n                ...(this.props[storeName] !== null && {props: this.props[storeName]})\r\n            }, actions, stores)\r\n\r\n            // If is async\r\n            if (isPromise(result)) {\r\n                result = await result\r\n            }\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    // @ts-ignore\r\n    dispatch = (storeName) => async ({ type = '', payload = null, callback }) => {\r\n            let action = (this.getAction(storeName, type)).function\r\n\r\n            if (action === null) {\r\n                console.error('Action or reducer doesnt exist')\r\n                return\r\n            }\r\n\r\n            // Get middleWare\r\n            const beforeWare = this.middleWare?.[storeName]?.beforeWare ?? []\r\n            const afterWare = this.middleWare?.[storeName]?.afterWare ?? []\r\n            let runMiddleWare = this.getFromMiddleWare(storeName)\r\n            \r\n            if (isPromise(runMiddleWare)) {\r\n                // @ts-ignore\r\n                runMiddleWare = await runMiddleWare\r\n            }\r\n\r\n            // Dispatch before ware\r\n            if (beforeWare.length !== 0) {\r\n                for (let i = 0; i < beforeWare.length; i++) {\r\n                    const middleWareIsAsync = isAsync(beforeWare[i])\r\n                    let result\r\n                    // @ts-ignore\r\n                    let executeMiddleWare = runMiddleWare(beforeWare[i], {\r\n                        type,\r\n                        payload\r\n                    })\r\n\r\n                    // @ts-ignore\r\n                    result = executeMiddleWare()\r\n\r\n                    if (isPromise(result) === true) {\r\n                        result = await result\r\n                    }\r\n\r\n                    this.dispatchReducerListeners(storeName, result)\r\n                }\r\n            }\r\n\r\n            // Dispatch action\r\n            let result = await this.runAction(storeName, action, payload, callback)\r\n            this.dispatchReducerListeners(storeName, result)\r\n\r\n            // Dispatch after ware\r\n            if (afterWare.length !== 0) {\r\n                for (let i = 0; i < afterWare.length; i++) {\r\n                    let result\r\n                    // @ts-ignore\r\n                    let executeMiddleWare = runMiddleWare(afterWare[i], {\r\n                        type,\r\n                        payload\r\n                    })\r\n\r\n                    // @ts-ignore\r\n                    result = executeMiddleWare()\r\n\r\n                    if (isPromise(result) === true) {\r\n                        result = await result\r\n                    }\r\n\r\n                    this.dispatchReducerListeners(storeName, result)\r\n                }\r\n            }\r\n\r\n            return this.state[storeName]\r\n        }\r\n}\r\n\r\n// @ts-ignore\r\nfunction isPromise(p) {\r\n    // @ts-ignore\r\n    if (Boolean(p && typeof p.then === 'function')) {\r\n      return true;\r\n    }\r\n  \r\n    return false;\r\n}\r\n\r\n// @ts-ignore\r\nfunction isAsync(func) {\r\n    try {\r\n        return func.constructor.name === 'AsyncFunction' || isPromise(func({}, {}))\r\n    }\r\n    catch(e) {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default new StateMachine()\r\n","import React, { Component, useMemo } from 'react'\r\nimport StateMachine from './StateMachine'\r\nimport { Types } from './types.t'\r\n\r\n/**\r\n * Get reducer actions\r\n * @deprecated (Will be removed on version 3) Use [StoreName].actions\r\n * @template {import('./types.t').FuseBoxNameType} N\r\n * @template {import('./types.t').ActionsType} A\r\n * @template {import('./types.t').SelectorsType} S\r\n * @template {import('./types.t').InitialStateType} I\r\n * @param {import('./types.t').FuseBoxType<N,A,S,I>} fuseBox\r\n * @returns {Record<keyof A, import('./types.t').ActionType>}\r\n */\r\nfunction useActions(fuseBox) {\r\n    return fuseBox.actions\r\n}\r\n\r\n/**\r\n * Get dispatch function for store\r\n * @deprecated (Will be removed on version 3) Use [StoreName].useState()\r\n * @template {import('./types.t').FuseBoxNameType} N\r\n * @template {import('./types.t').ActionsType} A\r\n * @template {import('./types.t').SelectorsType} S\r\n * @template {import('./types.t').InitialStateType} I\r\n * @param {import('./types.t').FuseBoxType<N,A,S,I>} fuseBox\r\n * @returns {Function}\r\n */\r\nfunction useDispatch(fuseBox) {\r\n    // @ts-ignore\r\n    return StateMachine.store[fuseBox.name].dispatch\r\n}\r\n\r\n/**\r\n * Get fuse\r\n * @deprecated (Will be removed on version 3) Use [StoreName].useState()\r\n * @template {import('./types.t').FuseBoxNameType} N\r\n * @template {import('./types.t').ActionsType} A\r\n * @template {import('./types.t').SelectorsType} S\r\n * @template {import('./types.t').InitialStateType} I\r\n * @param {import('./types.t').FuseBoxType<N,A,S,I>} fuseBox\r\n * @returns {Record<keyof I, any>}\r\n */\r\nfunction useFuse(fuseBox) {\r\n    return fuseBox.useState()\r\n}\r\n\r\n/**\r\n * Get fusebox selectors\r\n * @deprecated (Will be removed on version 3) Use [StoreName].selectors\r\n * @template {import('./types.t').FuseBoxNameType} N\r\n * @template {import('./types.t').ActionsType} A\r\n * @template {import('./types.t').SelectorsType} S\r\n * @template {import('./types.t').InitialStateType} I\r\n * @param {import('./types.t').FuseBoxType<N,A,S,I>} fuseBox\r\n * @returns {Record<keyof S, any>}\r\n */\r\nfunction useSelectors(fuseBox) {\r\n    // @ts-ignore\r\n    return StateMachine.store[fuseBox.name].getSelectors()\r\n}\r\n\r\n/**\r\n * Get fuse selection\r\n * @deprecated (Will be removed on version 3) Use [StoreName].selectors()\r\n * @template {import('./types.t').FuseBoxNameType} N\r\n * @template {import('./types.t').ActionsType} A\r\n * @template {import('./types.t').SelectorsType} S\r\n * @template {import('./types.t').InitialStateType} I\r\n * @param {import('./types.t').FuseBoxType<N,A,S,I>} fuseBox\r\n * @param {S} selector\r\n * @returns {Record<keyof S, any>}\r\n */\r\nfunction useFuseSelection(fuseBox, selector) {\r\n    return StateMachine.useSelectionHook(fuseBox, selector)\r\n}\r\n\r\n/**\r\n * Connect wire\r\n * @template {import('./types.t').FuseBoxNameType} N\r\n * @template {import('./types.t').ActionsType} A\r\n * @template {import('./types.t').SelectorsType} S\r\n * @template {import('./types.t').InitialStateType} I\r\n * @param {import('./types.t').FuseBoxType<N,A,S,I>} fuseBox\r\n * @param {React.Component} Child\r\n * @returns {React.FunctionComponent<Record<N, import('./types.t').FuseBoxType<N,A,S,I>&any>>}\r\n */\r\nconst connectWire = (fuseBox, Child) => (props) => {\r\n    // Get from fuse\r\n    const context = fuseBox.useState()\r\n\r\n    // Get dispatch for fuse\r\n    const dispatch = useDispatch(fuseBox)\r\n\r\n    const actions = fuseBox.actions\r\n\r\n    // Get fuse\r\n    const fuse = {\r\n        [fuseBox.name]: {\r\n            store: context,\r\n            dispatch: dispatch,\r\n            actions: actions\r\n        }\r\n    }\r\n\r\n    // Set up memoization\r\n    // @ts-ignore\r\n    return useMemo(() => <Child {...fuse} {...props} />, [props, context])\r\n}\r\n\r\n/**\r\n * Wire class components to fusebox\r\n * @template {import('./types.t').FuseBoxNameType} N\r\n * @template {import('./types.t').ActionsType} A\r\n * @template {import('./types.t').SelectorsType} S\r\n * @template {import('./types.t').InitialStateType} I\r\n * @param {import('./types.t').FuseBoxType<N,A,S,I>[]} fuseBoxes\r\n * @returns {(Child: React.Component) => React.FunctionComponent<Record<N, import('./types.t').FuseBoxType<N,A,S,I>&any>>|React.Component<Record<N, import('./types.t').FuseBoxType<N,A,S,I>&any>>}\r\n */\r\nconst wire = (fuseBoxes = []) => (Child) => {\r\n    // Set child\r\n    let newChild = Child\r\n\r\n    // Connect all wires to fuses by name\r\n    fuseBoxes.forEach((fuseBox) => {\r\n        // @ts-ignore\r\n        newChild = connectWire(fuseBox, newChild)\r\n    })\r\n\r\n    return newChild\r\n}\r\n\r\nconst createReducer = StateMachine.createReducer\r\n\r\nexport { wire, useFuse, useActions, useDispatch, useFuseSelection, useSelectors, createReducer }"],"names":["StateMachine","createReducer","initialState","actions","selectors","middleWare","that","defaultOptions","useDiffuseAsync","useDiffuseInitializeState","useDiffuseWebsocket","plugins","config","create","fuseBoxName","props","diffuseState","diffuse","loading","error","connectionStatus","initState","Object","keys","length","state","selections","newActions","INITIALIZE_STATE","payload","LOADING","SUCCESS","PROGRESS","FAIL","MESSAGE_RECIEVED","EMIT","CONNECT","DISCONNECT","CONNECT_ERROR","history","undo","redo","storeDict","listener","beforeWare","afterWare","store","name","getHistory","getState","getInitialState","dispatch","type","callback","undefined","console","warn","getAction","actionName","action","getActions","reduceFunction","prev","reduce","addAction","removeAction","addMiddleWare","push","getSelector","selectorName","getSelection","getSelections","getSelectors","createSelector","args","useSelectionHook","getMiddleWare","lastState","pop","currentState","dispatchReducerListeners","log","nextState","index","fuseBox","useState","fuse","setFuse","useLayoutEffect","handleReducerChange","newStore","addFuseListener","removeFuseListener","reducer","createFuseBox","createStore","selector","selection","mergeSelectors","fuseSelection","setFuseSelection","newFuseSelection","shouldUpdate","value","Function","i","stateSelections","storeName","runAction","result","executeMiddleWare","runMiddleWare","isPromise","middleWareIsAsync","isAsync","getFromMiddleWare","lastSelector","map","arg","func","includes","reducerListener","indexToRemove","indexOf","splice","dontSaveToHistory","undoCount","getCurrentState","stores","previous","current","p","Boolean","then","constructor","e","useActions","useDispatch","useFuse","useSelectors","useFuseSelection","connectWire","Child","context","useMemo","React","wire","fuseBoxes","newChild","forEach"],"mappings":"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"}