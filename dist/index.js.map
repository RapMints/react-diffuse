{"version":3,"file":"index.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../src/js/StateMachine.js","../src/js/index.js"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","class StateMachine {\r\n    constructor() {\r\n        this.state = {}\r\n        this.actions = {}\r\n        this.middleWare = {}\r\n        this.listener = {}\r\n        this.initialState = {}\r\n        this.store = {}\r\n        this.storeDict = []\r\n        this.selectors = {}\r\n        this.history = []\r\n    }\r\n\r\n    createReducer = ({ initialState = {}, actions = {}, selectors = {}, middleWare = {} }) => {\r\n        const that = this\r\n        return {\r\n            createStore: (storeName) => {\r\n                // Initialize store\r\n                this.state[storeName] = {\r\n                    diffuse: {\r\n                        loading: false,\r\n                        error: false\r\n                    },\r\n                    ...initialState\r\n                }\r\n\r\n                // Set store initial state\r\n                this.initialState[storeName] = {\r\n                    diffuse: {\r\n                        loading: false,\r\n                        error: false\r\n                    },\r\n                    ...initialState\r\n                }\r\n                this.actions[storeName] = {}\r\n\r\n                // Set store actions\r\n                let newActions = {\r\n                    INITIALIZE_STORE: (state, payload = {}) => {\r\n                        return {\r\n                            diffuse: {\r\n                                loading: false,\r\n                                error: false\r\n                            },\r\n                            ...initialState,\r\n                            ...payload\r\n                        }\r\n                    },\r\n                    LOADING: ({state}) => {\r\n                        return {\r\n                            diffuse: {\r\n                                loading: true,\r\n                                error: false\r\n                            }\r\n                        }\r\n                    },\r\n                    SUCCESS: ({state, payload}) => {\r\n                        return {\r\n                            diffuse: {\r\n                                loading: false,\r\n                                error: false\r\n                            },\r\n                            ...payload\r\n                        }\r\n                    },\r\n                    PROGRESS: ({state, payload}) => {\r\n                        return {\r\n                            ...payload\r\n                        }\r\n                    },\r\n                    FAIL: ({state, payload}) => {\r\n                        return {\r\n                            diffuse: {\r\n                                loading: false,\r\n                                error: true\r\n                            },\r\n                            ...payload\r\n                        }\r\n                    },\r\n                    ...actions\r\n                }\r\n\r\n                this.history[storeName] = {\r\n                    undo: [],\r\n                    redo: []\r\n                }\r\n\r\n                // Add store to dictionary\r\n                this.storeDict[storeName] = true\r\n\r\n                // Create listener for store\r\n                this.listener[storeName] = []\r\n\r\n                // Add middleware for store\r\n                this.middleWare[storeName] = {\r\n                    beforeWare: [],\r\n                    afterWare: []\r\n                }\r\n\r\n                // Create store object\r\n                const store = {\r\n                    name: storeName,\r\n                    getHistory: () => {\r\n                        return that.history[storeName]\r\n                    },\r\n                    getState: () => {\r\n                        return that.state?.[storeName]\r\n                    },\r\n                    getInitialState: () => {\r\n                        return that.initialState?.[storeName]\r\n                    },\r\n                    dispatch: ({ type, payload } = {}) => {\r\n                        if (that.actions[storeName][type] === undefined) {\r\n                            console.warn(\"Action doesn't exist.\")\r\n                            return\r\n                        }\r\n\r\n                        that.dispatch(storeName)({\r\n                            type: type,\r\n                            payload: payload ?? undefined\r\n                        })\r\n                    },\r\n                    getAction: (actionName) => {\r\n                        return (payload) => store.dispatch({ type: actionName, payload })\r\n                    },\r\n                    getActions: () => {\r\n                        return Object.keys(that.actions?.[storeName]).reduce((prev, actionName) => {\r\n                            prev[actionName] = store.getAction(actionName)\r\n                            return prev\r\n                        }, {})\r\n                    },\r\n                    addAction: (actionName, action) => {\r\n                        that.actions[storeName][actionName] = {function: action}\r\n                    },\r\n                    removeAction: (actionName) => {\r\n                        delete this?.actions?.[storeName][actionName]\r\n                    },\r\n                    addMiddleWare: ({afterWare = null, beforeWare = null} = {}) => {\r\n                        if (afterWare !== null) {\r\n                            that.middleWare?.[storeName].afterWare.push(afterWare)\r\n                        }\r\n                        else if (beforeWare !== null) {\r\n                            that.middleWare?.[storeName].beforeWare.push(beforeWare)\r\n                        }\r\n                    },\r\n                    getSelector: (selectorName) => {\r\n                        return that.selectors[storeName][selectorName]\r\n                    },\r\n                    createSelector: function createSelector(selectorName, ...args) {\r\n                        let lastSelector = args.pop()\r\n                        if (args.length === 0) {\r\n                            that.selectors[storeName][selectorName] = lastSelector\r\n                        } else {\r\n                            that.selectors[storeName][selectorName] = (state) => {\r\n                                const stateSelections = args.map((arg) => {\r\n                                    return arg(state)\r\n                                })\r\n\r\n                                return lastSelector(...stateSelections)\r\n                            }\r\n                        }\r\n                    },\r\n                    getMiddleWare: () => {\r\n                        return that.middleWare[storeName]\r\n                    },\r\n                    undo: () => {\r\n                        const history = store.getHistory()\r\n\r\n                        if (history.undo.length > 0) {\r\n                            let lastState = history.undo.pop()\r\n                            let currentState = store.getState()\r\n                            history.redo.push(currentState)\r\n                            that.dispatchReducerListeners(storeName, lastState, true)\r\n                        } else {\r\n                            console.log('Nothing to undo')\r\n                        }\r\n                    },\r\n                    redo: () => {\r\n                        const history = store.getHistory()\r\n\r\n                        if (history.redo.length > 0) {\r\n                            let nextState = history.redo.pop()\r\n                            let currentState = store.getState()\r\n                            history.undo.push(currentState)\r\n                            that.dispatchReducerListeners(storeName, nextState, true)\r\n                        } else {\r\n                            console.log('Nothing to redo')\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add actions\r\n                for (const actionName in newActions) {\r\n                    store.addAction(actionName, newActions[actionName])\r\n                }\r\n\r\n                // Add before ware\r\n                if (middleWare?.beforeWare) {\r\n                    for (const index in middleWare.beforeWare) {\r\n                        store.addMiddleWare({beforeWare: middleWare.beforeWare[index]})\r\n                    }\r\n                }\r\n\r\n                // Add afterware\r\n                if (middleWare?.afterWare) {\r\n                    for (const index in middleWare.afterWare) {\r\n                        store.addMiddleWare({afterWare: middleWare.afterWare[index]})\r\n                    }\r\n                }\r\n\r\n                // Add selectors\r\n                for (const selectorName in selectors) {\r\n                    store.createSelector(selectorName, ...selectors[selectorName])\r\n                }\r\n\r\n                // Add store object to stores\r\n                this.store[storeName] = store\r\n\r\n                return {\r\n                    name: storeName\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addFuseListener(storeName, func) {\r\n        // If storeName exist in dictionary\r\n        if (this.storeDict[storeName]) {\r\n            // If listeners for storeName were not yet defined\r\n            if (this.listener[storeName] === undefined) {\r\n                // Define listeners for storeName\r\n                this.listener[storeName] = []\r\n            }\r\n\r\n            // Push function to listener\r\n            this.listener[storeName].push(func)\r\n        } else {\r\n            console.warn(\"Reducer doesn't exist\")\r\n        }\r\n    }\r\n\r\n    removeFuseListener(storeName, func) {\r\n        // If storeName exist in dictionary\r\n        if (this.storeDict.includes(storeName)) {\r\n            // Get listeners for reducer\r\n            const reducerListener = this.listener?.[storeName]\r\n\r\n            // If reducer listener is not undefined\r\n            if (reducerListener !== undefined) {\r\n                // Get index of function to remove from reducer listener\r\n                const indexToRemove = reducerListener.indexOf(func)\r\n\r\n                // Remove listening function from reducer listener\r\n                this.listener[storeName].splice(indexToRemove, indexToRemove + 1)\r\n            } else {\r\n                // Reducer does not exist\r\n                console.warn(\"Reducer doesn't exist\")\r\n            }\r\n        } else {\r\n            // Reducer does not exist\r\n            console.warn(\"Reducer doesn't exist\")\r\n        }\r\n    }\r\n\r\n    dispatchReducerListeners(storeName, result, dontSaveToHistory = false) {\r\n        // If there is a result to push\r\n        if (result !== undefined) {\r\n            if (dontSaveToHistory === false) {\r\n                if (this.history[storeName].redo.length !== 0) {\r\n                    this.history[storeName].redo = []\r\n                }\r\n            }\r\n            const undoCount = this.history[storeName]?.undo.length\r\n            const currentState = this.getCurrentState(storeName)\r\n            if (dontSaveToHistory === false) {\r\n                if ((undoCount !== 0 && this.history[storeName]?.undo[undoCount - 1] !== currentState) || undoCount === 0) {\r\n                    this.history[storeName].undo.push(this.getCurrentState(storeName))\r\n                }\r\n            }\r\n\r\n            // Set State\r\n            this.state[storeName] = {\r\n                ...this.getCurrentState(storeName),\r\n                ...result\r\n            }\r\n\r\n            // If storeName exist in listeners\r\n            if (this.listener[storeName] !== undefined) {\r\n                // For each function listening\r\n                for (let i = 0; i < this.listener[storeName].length; i++) {\r\n                    // Dispatch listening functions\r\n                    this.listener[storeName][i](this.state[storeName])\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentState(storeName) {\r\n        return this.state[storeName]\r\n    }\r\n\r\n    getAction(storeName, actionName) {\r\n        return this.actions?.[storeName]?.[actionName] ?? null\r\n    }\r\n\r\n    async getFromMiddleWare(storeName) {\r\n        return (middleWare, { type = '', payload = null }) => {\r\n            let middleWareSelection = middleWare(storeName)\r\n            let executeMiddleWare = middleWareSelection(this.getCurrentState(storeName))\r\n            let isAsync = executeMiddleWare.constructor.name === 'AsyncFunction'\r\n\r\n            if (isAsync === true) {\r\n                return async () => await executeMiddleWare({ type, payload })\r\n            } else {\r\n                return () => executeMiddleWare({ type, payload })\r\n            }\r\n        }\r\n    }\r\n\r\n    async runAction(storeName, action, payload) {\r\n        // Initialize results\r\n        let result\r\n        let store = this.store[storeName]\r\n        let actions = store.getActions()\r\n\r\n        // If action is a function\r\n        if (action instanceof Function) {\r\n            // Get result of action\r\n            result = action({\r\n                state: this.getCurrentState(storeName),\r\n                payload: payload\r\n            }, actions)\r\n\r\n            if (isPromise(result)) {\r\n                result = await result\r\n            }\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    async runAsyncAction(storeName, action, payload) {\r\n        // Initialize results\r\n        let result\r\n        let store = this.store[storeName]\r\n        let actions = store.getActions()\r\n        // If action is a function\r\n        if (action instanceof Function) {\r\n            // Await result of action\r\n            result = await action(\r\n                {\r\n                    state: this.getCurrentState(storeName),\r\n                    payload: payload\r\n                },\r\n                actions\r\n            )\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    dispatch = (storeName) => async ({ type = '', payload = null }) => {\r\n            let action = (this.getAction(storeName, type)).function\r\n\r\n            if (action === null) {\r\n                console.error('Action or reducer doesnt exist')\r\n                return\r\n            }\r\n\r\n            // Get middleWare\r\n            const beforeWare = this.middleWare?.[storeName]?.beforeWare ?? []\r\n            const afterWare = this.middleWare?.[storeName]?.afterWare ?? []\r\n            const runMiddleWare = await this.getFromMiddleWare(storeName)\r\n\r\n            // Dispatch before ware\r\n            if (beforeWare.length !== 0) {\r\n                for (let i = 0; i < beforeWare.length; i++) {\r\n                    const middleWareIsAsync = isAsync(beforeWare[i])\r\n                    let result\r\n                    const executeMiddleWare = runMiddleWare(beforeWare[i], {\r\n                        type,\r\n                        payload\r\n                    })\r\n\r\n                    if (middleWareIsAsync) {\r\n                        result = await executeMiddleWare()\r\n                    } else {\r\n                        result = executeMiddleWare()\r\n                    }\r\n\r\n                    this.dispatchReducerListeners(storeName, result)\r\n                }\r\n            }\r\n\r\n            // Dispatch action\r\n            let result = await this.runAction(storeName, action, payload)\r\n            this.dispatchReducerListeners(storeName, result)\r\n\r\n            // Dispatch after ware\r\n            if (afterWare.length !== 0) {\r\n                for (let i = 0; i < afterWare.length; i++) {\r\n                    const middleWareIsAsync = isAsync(afterWare[i])\r\n                    let result\r\n                    const executeMiddleWare = runMiddleWare(afterWare[i], {\r\n                        type,\r\n                        payload\r\n                    })\r\n\r\n                    if (middleWareIsAsync) {\r\n                        result = await executeMiddleWare()\r\n                    } else {\r\n                        result = executeMiddleWare()\r\n                    }\r\n\r\n                    this.dispatchReducerListeners(storeName, result)\r\n                }\r\n            }\r\n\r\n            return this.state[storeName]\r\n        }\r\n}\r\n\r\nfunction isPromise(p) {\r\n    if (typeof p === 'object' && typeof p.then === 'function') {\r\n      return true;\r\n    }\r\n  \r\n    return false;\r\n}\r\n\r\nfunction isAsyncAction(func, actions) {\r\n    try {\r\n        return func.constructor.name === 'AsyncFunction' || isPromise(func({}, actions))\r\n    }\r\n    catch(e) {\r\n        return false\r\n    }\r\n}\r\n\r\nfunction isAsync(func) {\r\n    try {\r\n        return func.constructor.name === 'AsyncFunction' || isPromise(func({}, {}))\r\n    }\r\n    catch(e) {\r\n        return false\r\n    }\r\n}\r\nexport default new StateMachine()\r\n","import React, { useLayoutEffect, useMemo, useState } from 'react'\r\nimport StateMachine from './StateMachine'\r\n\r\nfunction useActions(store) {\r\n    return StateMachine.store[store.name].getActions()\r\n}\r\n\r\nfunction useDispatch(store) {\r\n    return StateMachine.store[store.name].dispatch\r\n}\r\n\r\nfunction useFuse(store) {\r\n    const [fuse, setFuse] = useState(StateMachine.store[store.name].getState())\r\n\r\n    useLayoutEffect(() => {\r\n        const handleReducerChange = (newStore) => {\r\n            setFuse(newStore)\r\n        }\r\n\r\n        StateMachine.addFuseListener(store.name, handleReducerChange)\r\n\r\n        return () => {\r\n            StateMachine.removeFuseListener(store.name, handleReducerChange)\r\n        }\r\n    }, [])\r\n\r\n    return fuse\r\n}\r\n\r\nfunction useSelectors(store) {\r\n    return StateMachine.store[store.name].getSelectors()\r\n}\r\n\r\nfunction useFuseSelector(store, selector) {\r\n    const [fuseSelection, setFuseSelection] = useState(selector(StateMachine.store[store.name].getState()))\r\n\r\n    useLayoutEffect(() => {\r\n        const handleReducerChange = (newStore) => {\r\n            const newFuseSelection = selector(newStore)\r\n\r\n            if (fuseSelection !== newFuseSelection) {\r\n                setFuseSelection(newFuseSelection)\r\n            }\r\n        }\r\n\r\n        StateMachine.addFuseListener(store.name, handleReducerChange)\r\n\r\n        return () => {\r\n            StateMachine.removeFuseListener(store.name, handleReducerChange)\r\n        }\r\n    }, [])\r\n\r\n    return fuseSelection\r\n}\r\n\r\n/**\r\n * Connects Child to a specified fuse\r\n * @param {string} fuseName Fuse to reference\r\n * @param {Component} Child Component to reference\r\n * @returns Wired component\r\n */\r\nconst connectWire = (store, Child) => (props) => {\r\n    // Get from fuse\r\n    const context = useFuse(store)\r\n\r\n    // Get dispatch for fuse\r\n    const dispatch = useDispatch(store)\r\n\r\n    const actions = useActions(store)\r\n\r\n    // Get fuse\r\n    const fuse = {\r\n        [store.name]: {\r\n            store: context,\r\n            dispatch: dispatch,\r\n            actions: actions\r\n        }\r\n    }\r\n\r\n    // Set up memoization\r\n    return useMemo(() => <Child {...fuse} {...props} />, [props, context])\r\n}\r\n\r\n/**\r\n * Wires component to a specified fuses\r\n * @param {object} properties\r\n * @param {string} properties.fuseName Fuse to reference\r\n * @param {Component} properties.component Component to reference\r\n * @returns Wired component\r\n */\r\nconst wire = (stores = []) => (Child) => {\r\n    // Set child\r\n    let newChild = Child\r\n\r\n    // Connect all wires to fuses by name\r\n    stores.forEach((store) => {\r\n        newChild = connectWire(store, newChild)\r\n    })\r\n\r\n    return newChild\r\n}\r\n\r\nconst createReducer = StateMachine.createReducer\r\n\r\nexport { wire, useFuse, useActions, useDispatch, useFuseSelector, useSelectors, createReducer }\r\n"],"names":["StateMachine","createReducer","initialState","actions","selectors","middleWare","that","createStore","storeName","state","diffuse","loading","error","newActions","INITIALIZE_STORE","payload","LOADING","SUCCESS","PROGRESS","FAIL","history","undo","redo","storeDict","listener","beforeWare","afterWare","store","name","getHistory","getState","getInitialState","dispatch","type","undefined","console","warn","getAction","actionName","getActions","Object","keys","reduce","prev","addAction","action","removeAction","addMiddleWare","push","getSelector","selectorName","createSelector","args","lastSelector","pop","length","stateSelections","map","arg","getMiddleWare","lastState","currentState","dispatchReducerListeners","log","nextState","index","getFromMiddleWare","runMiddleWare","runAction","result","i","middleWareIsAsync","isAsync","executeMiddleWare","addFuseListener","func","removeFuseListener","includes","reducerListener","indexToRemove","indexOf","splice","dontSaveToHistory","undoCount","getCurrentState","middleWareSelection","constructor","Function","isPromise","runAsyncAction","p","then","e","useActions","useDispatch","useFuse","useState","fuse","setFuse","useLayoutEffect","handleReducerChange","newStore","useSelectors","getSelectors","useFuseSelector","selector","fuseSelection","setFuseSelection","newFuseSelection","connectWire","Child","props","context","useMemo","React","wire","stores","newChild","forEach"],"mappings":"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"}