{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["/************************************************\r\n * React Diffuse\r\n * @description Global state management solution\r\n * @copyright 2022 RAPMINTS, LLC. All rights reserved.\r\n * @author Kyle Watkins, Paul Scala\r\n * @example https://codesandbox.io/s/wispy-leaf-iyp9k6\r\n ************************************************/\r\nimport React, { useContext, useMemo } from 'react'\r\n\r\n// Create diffuse context\r\nconst DiffuseContext = React.createContext()\r\n\r\n/**\r\n * Wires component to a specified fuse\r\n * @param {object} properties\r\n * @param {string} properties.fuseName Fuse to reference\r\n * @param {Component} properties.component Component to reference\r\n * @returns Wired component\r\n */\r\nconst wire =\r\n  ({ fuseName = [], Child }) =>\r\n  (props) => {\r\n    // Use diffusion context\r\n    const context = useContext(DiffuseContext)\r\n    const fuses = {}\r\n    const memoConstraint = []\r\n    for (let i = 0; i < fuseName.length; i++) {\r\n      fuses[fuseName[i]] = context[fuseName[i]]\r\n      memoConstraint.push(context[fuseName[i]].store)\r\n    }\r\n\r\n    // Set up memoization\r\n    return useMemo(\r\n      () => <Child {...fuses} {...props} />,\r\n      [props, ...memoConstraint]\r\n    )\r\n  }\r\n\r\n/**\r\n * Reduce\r\n * @param {object} reducer Reducer\r\n * @param {object} initialState Initial state\r\n * @param {object} actions Actions\r\n */\r\nconst Reduce = ({\r\n  reducer,\r\n  initialState,\r\n  middleware,\r\n  asyncReducer = null,\r\n  actions,\r\n  asyncActions\r\n}) => {\r\n  // Create initial dispatch\r\n  const [state, dispatch] = React.useReducer(\r\n    (state, action) => action.store,\r\n    initialState\r\n  )\r\n\r\n  // Create enhanced dispatch\r\n  const enhancedDispatch = (newAction) => {\r\n    const res = reducer(newAction.store, newAction)\r\n    if (newAction.store !== res) {\r\n      newAction.store = res\r\n    }\r\n\r\n    dispatch(newAction)\r\n    return res\r\n  }\r\n\r\n  // Create enhanced async dispatch\r\n  const enhancedAsyncDispatch = async (newAction) => {\r\n    return (\r\n      await asyncReducer(newAction, onSuccess, onFail, onProgress, onLoading)\r\n    ).store\r\n  }\r\n\r\n  // Initialize Default Loading Function\r\n  const onLoading = () => {\r\n    return dispatchWithMiddleWare({ type: 'LOADING' })\r\n  }\r\n\r\n  // Initialize Default Success Function\r\n  const onSuccess = (payload) => {\r\n    return dispatchWithMiddleWare({ type: 'SUCCESS', payload })\r\n  }\r\n\r\n  // Initialize Default Fail Function\r\n  const onFail = (payload) => {\r\n    return dispatchWithMiddleWare({ type: 'FAIL', payload })\r\n  }\r\n\r\n  // Initialize Default Progress functions\r\n  const onProgress = (payload) => {\r\n    return dispatchWithMiddleWare({ type: 'PROGRESS', payload })\r\n  }\r\n\r\n  // Dispatch with middleware\r\n  const dispatchWithMiddleWare = async (action) => {\r\n    // Set new action from action passed through dispatch\r\n    let newAction = action\r\n\r\n    // If store is not defined in action set it\r\n    if (newAction.store === undefined) {\r\n      newAction.store = state\r\n    }\r\n\r\n    // If before ware is available run it\r\n    if (middleware && middleware.beforeWare) {\r\n      middleware.beforeWare.forEach((beforeWare) => {\r\n        beforeWare(newAction)\r\n      })\r\n    }\r\n\r\n    // Async actions are available and the current action is async\r\n    if (\r\n      asyncReducer !== null &&\r\n      Object.keys(asyncActions).includes(newAction.type)\r\n    ) {\r\n      // Get new store from dispatch\r\n      const newStore = await enhancedAsyncDispatch(newAction)\r\n\r\n      // Set new action with new store\r\n      newAction = { ...newAction, store: { ...newStore } }\r\n    } else {\r\n      // Get new store from dispatch\r\n      const newStore = { ...enhancedDispatch(newAction) }\r\n\r\n      // Set new action with new store\r\n      newAction = { ...newAction, store: { ...newStore } }\r\n    }\r\n\r\n    // If afterWare is available run it\r\n    if (middleware && middleware.afterWare) {\r\n      middleware.afterWare.forEach((afterWare) => {\r\n        afterWare(newAction)\r\n      })\r\n    }\r\n\r\n    // Return new action\r\n    return newAction\r\n  }\r\n\r\n  let actionsDispatch = () => {\r\n    let actionKeys = Object.keys(actions)\r\n    let asyncActionKeys = Object.keys(asyncActions)\r\n    let actionDispatch = {}\r\n    actionKeys.map((a)=> {\r\n      actionDispatch[a] = (payload) => dispatchWithMiddleWare({type: a, payload: payload})\r\n    })\r\n\r\n    asyncActionKeys.map((a)=>{\r\n      actionDispatch[a] = (payload) => dispatchWithMiddleWare({type: a, payload: payload})\r\n    })\r\n\r\n    return actionDispatch\r\n  }\r\n  // Return state as store and dispatch as dispatch middleware\r\n  const value = {\r\n    /**\r\n     * Current state of reducer\r\n     * @type object\r\n     */\r\n    store: state,\r\n    /**\r\n     * @deprecated Use actions instead\r\n     */\r\n    dispatch: dispatchWithMiddleWare,\r\n    /**\r\n     * Dispatch actions for reducer\r\n     * @type object\r\n     */\r\n    actions: actionsDispatch()\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n/**\r\n *\r\n * @param {object[]} values\r\n */\r\nconst MergeReducers = (globalState = []) => {\r\n  // Reduce each state into reducers\r\n  const reducers = globalState.map((state) => {\r\n    return {\r\n      [state.name]: () =>{\r\n        const reducer = Reduce({\r\n          reducer: state.reducer,\r\n          initialState: state.initialState,\r\n          middleware: state.middleware,\r\n          asyncReducer: state.asyncReducer,\r\n          actions: state.actions,\r\n          asyncActions: state.asyncActions\r\n        })\r\n        return reducer\r\n      }\r\n    }\r\n  })\r\n\r\n  // Initialize merged reducers\r\n  const mergedReducers = []\r\n\r\n  // Merge reducers into an array\r\n  reducers.map((r) => {\r\n    Object.keys(r).map((key) => {\r\n      mergedReducers.push(r[key])\r\n    })\r\n  })\r\n\r\n  return reducers\r\n}\r\n\r\n/**\r\n * Creates a reducer\r\n * @param {object} initialState Initial reducer state\r\n * @param {object} actions Key value pair of functions\r\n */\r\nconst createReducer = ({\r\n  initialState = {},\r\n  actions = [],\r\n  middleware = { beforeWare: [], afterWare: [] },\r\n  asyncActions = null\r\n}) => {\r\n  // Reducer\r\n  const reducer = {\r\n    initialState: {\r\n      diffuse: {\r\n        loading: false,\r\n        error: false\r\n      },\r\n      ...initialState\r\n    },\r\n    actionsDict: {\r\n      INITIALIZE_STORE: (state, payload = {}) => {\r\n        return {\r\n          diffuse: {\r\n            loading: false,\r\n            error: false\r\n          },\r\n          ...initialState,\r\n          ...payload\r\n        }\r\n      },\r\n      LOADING: (state) => {\r\n        return {\r\n          diffuse: {\r\n            loading: true,\r\n            error: false\r\n          }\r\n        }\r\n      },\r\n      SUCCESS: (state, payload) => {\r\n        return {\r\n          diffuse: {\r\n            loading: false,\r\n            error: false\r\n          },\r\n          ...payload\r\n        }\r\n      },\r\n      PROGRESS: (state, payload) => {\r\n        return {\r\n          ...payload\r\n        }\r\n      },\r\n      FAIL: (state, payload) => {\r\n        return {\r\n          diffuse: {\r\n            loading: false,\r\n            error: true\r\n          },\r\n          ...payload\r\n        }\r\n      }\r\n    },\r\n    asyncActionsDict: {},\r\n    middleware: middleware,\r\n    // Initialized reducer function\r\n    initialize: (name) => ({\r\n      name: name,\r\n      initialState: { ...reducer.initialState },\r\n      reducer: reducer.reducer,\r\n      middleware: middleware,\r\n      asyncReducer: reducer.asyncReducer,\r\n      actions: reducer.actionsDict,\r\n      asyncActions: reducer.asyncActionsDict\r\n    }),\r\n    reducer: (state, action) => {\r\n      // If action exist in dictionary run the action and return the value\r\n      if (action.type in reducer.actionsDict) {\r\n        const res = reducer.actionsDict[action.type](state, action.payload)\r\n        return {\r\n          ...state,\r\n          ...res\r\n        }\r\n      }\r\n    },\r\n    asyncReducer: async (action, onSuccess, onFail, onProgress, onLoading) => {\r\n      onLoading()\r\n      return {\r\n        ...(await reducer.asyncActionsDict[action.type]({\r\n            state: action.store,\r\n            payload: action.payload\r\n          },\r\n          onSuccess,\r\n          onFail,\r\n          onProgress\r\n        )),\r\n        type: action.type\r\n      }\r\n    },\r\n    addAction: (actionName, action) => {\r\n      // Add regular action\r\n      if (action.type === 'action') {\r\n        reducer.actionsDict[actionName] = action.job\r\n      }\r\n      // Add async action\r\n      else if (action.type === 'async') {\r\n        reducer.asyncActionsDict[actionName] = action.job\r\n      }\r\n    },\r\n    removeAction: (actionName) => {\r\n      // Remove action by name\r\n      if (actionName in reducer.actionsDict) {\r\n        delete reducer.actionsDict[actionName]\r\n      }\r\n    },\r\n    getActions: () => {\r\n      // Init actions array\r\n      const actions = []\r\n\r\n      // For each action push to array\r\n      for (const key in reducer.actionsDict) {\r\n        actions.push(reducer.actionsDict[key])\r\n      }\r\n\r\n      // return actions\r\n      return actions\r\n    }\r\n  }\r\n\r\n  // Add actions to dictionary\r\n  for (const key in actions) {\r\n    reducer.addAction(key, actions[key])\r\n  }\r\n\r\n  return reducer\r\n}\r\n/**\r\n * Diffuse Provider\r\n * @param {object} properties Properties for Diffusion\r\n * @param {Component} properties.children Main App\r\n */\r\nconst Diffuse = ({ reducers, children }) => {\r\n  // Merge reducers from global state\r\n  const mergedReducers = MergeReducers(reducers)\r\n\r\n  // Init Fuse\r\n  const values = {}\r\n\r\n  \r\n\r\n  // Initialize fuses\r\n  for (let i = 0; i < mergedReducers.length; i++) {\r\n    let keys = Object.keys(mergedReducers[i])[0]\r\n    values[keys] = mergedReducers[i][keys]()\r\n  }\r\n\r\n  // Return diffusion provider\r\n  return (\r\n    <DiffuseContext.Provider value={values}>{children}</DiffuseContext.Provider>\r\n  )\r\n}\r\n\r\nexport { wire, createReducer }\r\n\r\nexport default Diffuse\r\n"],"names":["DiffuseContext","React","createContext","wire","fuseName","Child","props","context","useContext","fuses","memoConstraint","i","length","push","store","useMemo","Reduce","reducer","initialState","middleware","asyncReducer","actions","asyncActions","useReducer","state","action","dispatch","enhancedDispatch","newAction","res","enhancedAsyncDispatch","onSuccess","onFail","onProgress","onLoading","dispatchWithMiddleWare","type","payload","afterWare","forEach","undefined","beforeWare","Object","keys","includes","newStore","actionsDispatch","actionKeys","asyncActionKeys","actionDispatch","map","a","value","MergeReducers","globalState","reducers","name","r","key","createReducer","diffuse","loading","error","actionsDict","INITIALIZE_STORE","LOADING","SUCCESS","PROGRESS","FAIL","asyncActionsDict","initialize","addAction","actionName","job","removeAction","getActions","Diffuse","children","mergedReducers","values"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAUA,IAAMA,cAAc,GAAGC,cAAK,CAACC,aAAN,EAAvB;;IASMC,IAAI,GACR,SADIA,IACJ;EAAA,yBAAGC,QAAH;MAAGA,QAAH,8BAAc,EAAd;MAAkBC,KAAlB,QAAkBA,KAAlB;EAAA,OACA,UAACC,KAAD,EAAW;IAET,IAAMC,OAAO,GAAGC,gBAAU,CAACR,cAAD,CAA1B;IACA,IAAMS,KAAK,GAAG,EAAd;IACA,IAAMC,cAAc,GAAG,EAAvB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACQ,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;MACxCF,KAAK,CAACL,QAAQ,CAACO,CAAD,CAAT,CAAL,GAAqBJ,OAAO,CAACH,QAAQ,CAACO,CAAD,CAAT,CAA5B;MACAD,cAAc,CAACG,IAAf,CAAoBN,OAAO,CAACH,QAAQ,CAACO,CAAD,CAAT,CAAP,CAAqBG,KAAzC;;;IAIF,OAAOC,aAAO,CACZ;MAAA,oBAAMd,6BAAC,KAAD,eAAWQ,KAAX,EAAsBH,KAAtB,EAAN;KADY,GAEXA,KAFW,SAEDI,cAFC,EAAd;GAZF;AAAA;;AAwBF,IAAMM,MAAM,GAAG,SAATA,MAAS,QAOT;EAAA,IANJC,OAMI,SANJA,OAMI;MALJC,YAKI,SALJA,YAKI;MAJJC,UAII,SAJJA,UAII;iCAHJC,YAGI;MAHJA,YAGI,mCAHW,IAGX;MAFJC,OAEI,SAFJA,OAEI;MADJC,YACI,SADJA,YACI;;EAEJ,wBAA0BrB,cAAK,CAACsB,UAAN,CACxB,UAACC,KAAD,EAAQC,MAAR;IAAA,OAAmBA,MAAM,CAACX,KAA1B;GADwB,EAExBI,YAFwB,CAA1B;MAAOM,KAAP;MAAcE,QAAd;;EAMA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD,EAAe;IACtC,IAAMC,GAAG,GAAGZ,OAAO,CAACW,SAAS,CAACd,KAAX,EAAkBc,SAAlB,CAAnB;;IACA,IAAIA,SAAS,CAACd,KAAV,KAAoBe,GAAxB,EAA6B;MAC3BD,SAAS,CAACd,KAAV,GAAkBe,GAAlB;;;IAGFH,QAAQ,CAACE,SAAD,CAAR;IACA,OAAOC,GAAP;GAPF;;EAWA,IAAMC,qBAAqB,YAArBA,qBAAqB,CAAUF,SAAV;IAAA,IAAwB;MAAA,uBAEzCR,YAAY,CAACQ,SAAD,EAAYG,SAAZ,EAAuBC,MAAvB,EAA+BC,UAA/B,EAA2CC,SAA3C,CAF6B;QACjD,OAAO,cAELpB,KAFF;;KADyB;MAAA;;GAA3B;;EAOA,IAAMoB,SAAS,GAAG,SAAZA,SAAY,GAAM;IACtB,OAAOC,sBAAsB,CAAC;MAAEC,IAAI,EAAE;KAAT,CAA7B;GADF;;EAKA,IAAML,SAAS,GAAG,SAAZA,SAAY,CAACM,OAAD,EAAa;IAC7B,OAAOF,sBAAsB,CAAC;MAAEC,IAAI,EAAE,SAAR;MAAmBC,OAAO,EAAPA;KAApB,CAA7B;GADF;;EAKA,IAAML,MAAM,GAAG,SAATA,MAAS,CAACK,OAAD,EAAa;IAC1B,OAAOF,sBAAsB,CAAC;MAAEC,IAAI,EAAE,MAAR;MAAgBC,OAAO,EAAPA;KAAjB,CAA7B;GADF;;EAKA,IAAMJ,UAAU,GAAG,SAAbA,UAAa,CAACI,OAAD,EAAa;IAC9B,OAAOF,sBAAsB,CAAC;MAAEC,IAAI,EAAE,UAAR;MAAoBC,OAAO,EAAPA;KAArB,CAA7B;GADF;;EAKA,IAAMF,sBAAsB,YAAtBA,sBAAsB,CAAUV,MAAV;IAAA,IAAqB;MAAA;QAmC/C,IAAIN,UAAU,IAAIA,UAAU,CAACmB,SAA7B,EAAwC;UACtCnB,UAAU,CAACmB,SAAX,CAAqBC,OAArB,CAA6B,UAACD,SAAD,EAAe;YAC1CA,SAAS,CAACV,SAAD,CAAT;WADF;;;QAMF,OAAOA,SAAP;;;MAxCA,IAAIA,SAAS,GAAGH,MAAhB;;MAGA,IAAIG,SAAS,CAACd,KAAV,KAAoB0B,SAAxB,EAAmC;QACjCZ,SAAS,CAACd,KAAV,GAAkBU,KAAlB;;;MAIF,IAAIL,UAAU,IAAIA,UAAU,CAACsB,UAA7B,EAAyC;QACvCtB,UAAU,CAACsB,UAAX,CAAsBF,OAAtB,CAA8B,UAACE,UAAD,EAAgB;UAC5CA,UAAU,CAACb,SAAD,CAAV;SADF;;;MAX6C;QAAA,IAkB7CR,YAAY,KAAK,IAAjB,IACAsB,MAAM,CAACC,IAAP,CAAYrB,YAAZ,EAA0BsB,QAA1B,CAAmChB,SAAS,CAACQ,IAA7C,CAnB6C;UAAA,uBAsBtBN,qBAAqB,CAACF,SAAD,CAtBC,iBAsBvCiB,QAtBuC;YAyB7CjB,SAAS,gBAAQA,SAAR;cAAmBd,KAAK,eAAO+B,QAAP;cAAjC;;;UAGA,IAAMA,QAAQ,gBAAQlB,gBAAgB,CAACC,SAAD,CAAxB,CAAd;;UAGAA,SAAS,gBAAQA,SAAR;YAAmBd,KAAK,eAAO+B,QAAP;YAAjC;;;;MA/B6C;KAArB;MAAA;;GAA5B;;EA6CA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC1B,IAAIC,UAAU,GAAGL,MAAM,CAACC,IAAP,CAAYtB,OAAZ,CAAjB;IACA,IAAI2B,eAAe,GAAGN,MAAM,CAACC,IAAP,CAAYrB,YAAZ,CAAtB;IACA,IAAI2B,cAAc,GAAG,EAArB;IACAF,UAAU,CAACG,GAAX,CAAe,UAACC,CAAD,EAAM;MACnBF,cAAc,CAACE,CAAD,CAAd,GAAoB,UAACd,OAAD;QAAA,OAAaF,sBAAsB,CAAC;UAACC,IAAI,EAAEe,CAAP;UAAUd,OAAO,EAAEA;SAApB,CAAnC;OAApB;KADF;IAIAW,eAAe,CAACE,GAAhB,CAAoB,UAACC,CAAD,EAAK;MACvBF,cAAc,CAACE,CAAD,CAAd,GAAoB,UAACd,OAAD;QAAA,OAAaF,sBAAsB,CAAC;UAACC,IAAI,EAAEe,CAAP;UAAUd,OAAO,EAAEA;SAApB,CAAnC;OAApB;KADF;IAIA,OAAOY,cAAP;GAZF;;EAeA,IAAMG,KAAK,GAAG;IAKZtC,KAAK,EAAEU,KALK;IASZE,QAAQ,EAAES,sBATE;IAcZd,OAAO,EAAEyB,eAAe;GAd1B;EAiBA,OAAOM,KAAP;AACD,CAnID;;AAyIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,WAAD,EAAsB;EAAA,IAArBA,WAAqB;IAArBA,WAAqB,GAAP,EAAO;;;EAE1C,IAAMC,QAAQ,GAAGD,WAAW,CAACJ,GAAZ,CAAgB,UAAC1B,KAAD,EAAW;IAAA;;IAC1C,yBACGA,KAAK,CAACgC,IADT,IACgB,YAAK;MACjB,IAAMvC,OAAO,GAAGD,MAAM,CAAC;QACrBC,OAAO,EAAEO,KAAK,CAACP,OADM;QAErBC,YAAY,EAAEM,KAAK,CAACN,YAFC;QAGrBC,UAAU,EAAEK,KAAK,CAACL,UAHG;QAIrBC,YAAY,EAAEI,KAAK,CAACJ,YAJC;QAKrBC,OAAO,EAAEG,KAAK,CAACH,OALM;QAMrBC,YAAY,EAAEE,KAAK,CAACF;OANA,CAAtB;MAQA,OAAOL,OAAP;KAVJ;GADe,CAAjB;EAoBAsC,QAAQ,CAACL,GAAT,CAAa,UAACO,CAAD,EAAO;IAClBf,MAAM,CAACC,IAAP,CAAYc,CAAZ,EAAeP,GAAf,CAAmB,UAACQ,GAAD,EAAS;KAA5B;GADF;EAMA,OAAOH,QAAP;AACD,CA7BD;;IAoCMI,aAAa,GAAG,SAAhBA,aAAgB,QAKhB;iCAJJzC,YAII;MAJJA,YAII,mCAJW,EAIX;4BAHJG,OAGI;MAHJA,OAGI,8BAHM,EAGN;+BAFJF,UAEI;MAFJA,UAEI,iCAFS;IAAEsB,UAAU,EAAE,EAAd;IAAkBH,SAAS,EAAE;GAEtC;EAEJ,IAAMrB,QAAO,GAAG;IACdC,YAAY;MACV0C,OAAO,EAAE;QACPC,OAAO,EAAE,KADF;QAEPC,KAAK,EAAE;;OAEN5C,YALO,CADE;IAQd6C,WAAW,EAAE;MACXC,gBAAgB,EAAE,0BAACxC,KAAD,EAAQa,OAAR,EAAyB;QAAA,IAAjBA,OAAiB;UAAjBA,OAAiB,GAAP,EAAO;;;QACzC;UACEuB,OAAO,EAAE;YACPC,OAAO,EAAE,KADF;YAEPC,KAAK,EAAE;;WAEN5C,YALL,EAMKmB,OANL;OAFS;MAWX4B,OAAO,EAAE,iBAACzC,KAAD,EAAW;QAClB,OAAO;UACLoC,OAAO,EAAE;YACPC,OAAO,EAAE,IADF;YAEPC,KAAK,EAAE;;SAHX;OAZS;MAmBXI,OAAO,EAAE,iBAAC1C,KAAD,EAAQa,OAAR,EAAoB;QAC3B;UACEuB,OAAO,EAAE;YACPC,OAAO,EAAE,KADF;YAEPC,KAAK,EAAE;;WAENzB,OALL;OApBS;MA4BX8B,QAAQ,EAAE,kBAAC3C,KAAD,EAAQa,OAAR,EAAoB;QAC5B,oBACKA,OADL;OA7BS;MAiCX+B,IAAI,EAAE,cAAC5C,KAAD,EAAQa,OAAR,EAAoB;QACxB;UACEuB,OAAO,EAAE;YACPC,OAAO,EAAE,KADF;YAEPC,KAAK,EAAE;;WAENzB,OALL;;KA1CU;IAmDdgC,gBAAgB,EAAE,EAnDJ;IAoDdlD,UAAU,EAAEA,UApDE;IAsDdmD,UAAU,EAAE,oBAACd,IAAD;MAAA,OAAW;QACrBA,IAAI,EAAEA,IADe;QAErBtC,YAAY,eAAOD,QAAO,CAACC,YAAf,CAFS;QAGrBD,OAAO,EAAEA,QAAO,CAACA,OAHI;QAIrBE,UAAU,EAAEA,UAJS;QAKrBC,YAAY,EAAEH,QAAO,CAACG,YALD;QAMrBC,OAAO,EAAEJ,QAAO,CAAC8C,WANI;QAOrBzC,YAAY,EAAEL,QAAO,CAACoD;OAPZ;KAtDE;IA+DdpD,OAAO,EAAE,iBAACO,KAAD,EAAQC,MAAR,EAAmB;MAE1B,IAAIA,MAAM,CAACW,IAAP,IAAenB,QAAO,CAAC8C,WAA3B,EAAwC;QACtC,IAAMlC,GAAG,GAAGZ,QAAO,CAAC8C,WAAR,CAAoBtC,MAAM,CAACW,IAA3B,EAAiCZ,KAAjC,EAAwCC,MAAM,CAACY,OAA/C,CAAZ;;QACA,oBACKb,KADL,EAEKK,GAFL;;KAnEU;IAyEdT,YAAY,YAASK,MAAT,EAAiBM,SAAjB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD;MAAA,IAA8D;QACxEA,SAAS;QAD+D,uBAG5DjB,QAAO,CAACoD,gBAAR,CAAyB5C,MAAM,CAACW,IAAhC,EAAsC;UAC5CZ,KAAK,EAAEC,MAAM,CAACX,KAD8B;UAE5CuB,OAAO,EAAEZ,MAAM,CAACY;SAFV,EAIRN,SAJQ,EAKRC,MALQ,EAMRC,UANQ,CAH4D;UAExE;YASEG,IAAI,EAAEX,MAAM,CAACW;;;OAXL;QAAA;;KAzEE;IAuFdmC,SAAS,EAAE,mBAACC,UAAD,EAAa/C,MAAb,EAAwB;MAEjC,IAAIA,MAAM,CAACW,IAAP,KAAgB,QAApB,EAA8B;QAC5BnB,QAAO,CAAC8C,WAAR,CAAoBS,UAApB,IAAkC/C,MAAM,CAACgD,GAAzC;OADF,MAIK,IAAIhD,MAAM,CAACW,IAAP,KAAgB,OAApB,EAA6B;QAChCnB,QAAO,CAACoD,gBAAR,CAAyBG,UAAzB,IAAuC/C,MAAM,CAACgD,GAA9C;;KA9FU;IAiGdC,YAAY,EAAE,sBAACF,UAAD,EAAgB;MAE5B,IAAIA,UAAU,IAAIvD,QAAO,CAAC8C,WAA1B,EAAuC;QACrC,OAAO9C,QAAO,CAAC8C,WAAR,CAAoBS,UAApB,CAAP;;KApGU;IAuGdG,UAAU,EAAE,sBAAM;MAEhB,IAAMtD,OAAO,GAAG,EAAhB;;MAGA,KAAK,IAAMqC,GAAX,IAAkBzC,QAAO,CAAC8C,WAA1B,EAAuC;QACrC1C,OAAO,CAACR,IAAR,CAAaI,QAAO,CAAC8C,WAAR,CAAoBL,GAApB,CAAb;;;MAIF,OAAOrC,OAAP;;GAjHJ;;EAsHA,KAAK,IAAMqC,GAAX,IAAkBrC,OAAlB,EAA2B;IACzBJ,QAAO,CAACsD,SAAR,CAAkBb,GAAlB,EAAuBrC,OAAO,CAACqC,GAAD,CAA9B;;;EAGF,OAAOzC,QAAP;AACD;;AAMD,IAAM2D,OAAO,GAAG,SAAVA,OAAU,QAA4B;EAAA,IAAzBrB,QAAyB,SAAzBA,QAAyB;MAAfsB,QAAe,SAAfA,QAAe;EAE1C,IAAMC,cAAc,GAAGzB,aAAa,CAACE,QAAD,CAApC;EAGA,IAAMwB,MAAM,GAAG,EAAf;;EAKA,KAAK,IAAIpE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmE,cAAc,CAAClE,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;IAC9C,IAAIgC,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYmC,cAAc,CAACnE,CAAD,CAA1B,EAA+B,CAA/B,CAAX;IACAoE,MAAM,CAACpC,IAAD,CAAN,GAAemC,cAAc,CAACnE,CAAD,CAAd,CAAkBgC,IAAlB,GAAf;;;EAIF,oBACE1C,6BAAC,cAAD,CAAgB,QAAhB;IAAyB,KAAK,EAAE8E;KAASF,QAAzC,CADF;AAGD,CAnBD;;;;;;"}