{"version":3,"file":"index.modern.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../src/js/StateMachine.js","../src/js/index.js"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","class StateMachine {\r\n    constructor() {\r\n        this.state = {}\r\n        this.actions = {}\r\n        this.middleWare = {}\r\n        this.listener = {}\r\n        this.initialState = {}\r\n        this.store = {}\r\n        this.storeDict = []\r\n        this.selectors = {}\r\n        this.history = {}\r\n        this.props = {}\r\n    }\r\n\r\n    createReducer = ({ initialState = {}, actions = {}, selectors = {}, middleWare = {}, options = {}}) => {\r\n        const that = this\r\n\r\n        const defaultOptions = {\r\n            useDiffuseAsync: true,\r\n            useDiffuseInitializeState: true,\r\n            useDiffuseWebsocket: true,\r\n            plugins: []\r\n        }\r\n\r\n        const config = {\r\n            ...defaultOptions,\r\n            ...options\r\n        }\r\n\r\n        return {\r\n            createStore: (storeName, props = null) => {\r\n                const diffuseState = {\r\n                    diffuse: {\r\n                        ...(config.useDiffuseAsync === true && {\r\n                            loading: false,\r\n                            error: false\r\n                        }),\r\n                        ...(config.useDiffuseWebsocket === true && {\r\n                            connectionStatus: 'DISCONNECTED'\r\n                        })\r\n                    }\r\n                }\r\n\r\n                const initState = {\r\n                    ...(Object.keys(diffuseState.diffuse).length !== 0 && {...diffuseState}),\r\n                    ...initialState\r\n                }\r\n\r\n                // Set store initial state\r\n                that.initialState[storeName] = {\r\n                    ...initState\r\n                }\r\n\r\n                // Initialize store\r\n                that.state[storeName] = {\r\n                    ...initState\r\n                }\r\n\r\n                that.selectors[storeName] = {}\r\n\r\n                that.actions[storeName] = {}\r\n\r\n                that.props[storeName] = props\r\n\r\n                // Set store actions\r\n                let newActions = {\r\n                    ...(config.useDiffuseInitializeState === true && {INITIALIZE_STATE: ({state, payload = {}}) => {\r\n                        return {\r\n                            ...initState,\r\n                            ...payload\r\n                        }\r\n                    }}),\r\n                    ...(config.useDiffuseAsync === true && {  \r\n                        LOADING: ({state}) => {\r\n                            return {\r\n                                diffuse: {\r\n                                    ...state.diffuse,\r\n                                    loading: true,\r\n                                    error: false\r\n                                }\r\n                            }\r\n                        },\r\n                        SUCCESS: ({state, payload}) => {\r\n                            return {\r\n                                diffuse: {\r\n                                    ...state.diffuse,\r\n                                    loading: false,\r\n                                    error: false\r\n                                },\r\n                                ...payload\r\n                            }\r\n                        },\r\n                        PROGRESS: ({state, payload}) => {\r\n                            return {\r\n                                ...payload\r\n                            }\r\n                        },\r\n                        FAIL: ({state, payload}) => {\r\n                            return {\r\n                                diffuse: {\r\n                                    ...state.diffuse,\r\n                                    loading: false,\r\n                                    error: true\r\n                                },\r\n                                ...payload\r\n                            }\r\n                        },\r\n                    }),\r\n                    ...(config.useDiffuseWebsocket === true && {\r\n                        MESSAGE_RECIEVED: ({state, payload}) => {\r\n                            return {\r\n                                ...payload\r\n                            }\r\n                        },\r\n                        EMIT: ({state, payload}) => {\r\n                            return {\r\n                                ...payload\r\n                            }\r\n                        },\r\n                        CONNECT: ({state, payload}) => {\r\n                            return {\r\n                                diffuse: {\r\n                                    ...state.diffuse,\r\n                                    connectionStatus: 'CONNECTED'\r\n                                },\r\n                                ...payload\r\n                            }\r\n                        },\r\n                        DISCONNECT: ({state, payload}) => {\r\n                            return {\r\n                                diffuse: {\r\n                                    ...state.diffuse,\r\n                                    connectionStatus: 'DISCONNECTED'\r\n                                },\r\n                                ...payload\r\n                            }\r\n                        },\r\n                        CONNECT_ERROR: ({state, payload}) => {\r\n                            return {\r\n                                diffuse: {\r\n                                    ...state.diffuse,\r\n                                    connectionStatus: 'FAILED'\r\n                                },\r\n                                ...payload\r\n                            }\r\n                        }\r\n                    }),\r\n                    ...actions\r\n                }\r\n\r\n                that.history[storeName] = {\r\n                    undo: [],\r\n                    redo: []\r\n                }\r\n\r\n                // Add store to dictionary\r\n                that.storeDict[storeName] = true\r\n\r\n                // Create listener for store\r\n                that.listener[storeName] = []\r\n\r\n                // Add middleware for store\r\n                that.middleWare[storeName] = {\r\n                    beforeWare: [],\r\n                    afterWare: []\r\n                }\r\n\r\n                // Create store object\r\n                const store = {\r\n                    name: storeName,\r\n                    getHistory: () => {\r\n                        return that.history[storeName]\r\n                    },\r\n                    getState: () => {\r\n                        return that.state?.[storeName]\r\n                    },\r\n                    getInitialState: () => {\r\n                        return that.initialState?.[storeName]\r\n                    },\r\n                    dispatch: ({ type, payload } = {}) => {\r\n                        if (that.actions[storeName][type] === undefined) {\r\n                            console.warn(\"Action doesn't exist.\")\r\n                            return\r\n                        }\r\n\r\n                        that.dispatch(storeName)({\r\n                            type: type,\r\n                            payload: payload ?? undefined\r\n                        })\r\n                    },\r\n                    getAction: (actionName) => {\r\n                        return (payload) => store.dispatch({ type: actionName, payload })\r\n                    },\r\n                    getActions: () => {\r\n                        return Object.keys(that.actions?.[storeName]).reduce((prev, actionName) => {\r\n                            prev[actionName] = store.getAction(actionName)\r\n                            return prev\r\n                        }, {})\r\n                    },\r\n                    addAction: (actionName, action) => {\r\n                        that.actions[storeName][actionName] = {function: action}\r\n                    },\r\n                    removeAction: (actionName) => {\r\n                        delete this?.actions?.[storeName][actionName]\r\n                    },\r\n                    addMiddleWare: ({afterWare = null, beforeWare = null} = {}) => {\r\n                        if (afterWare !== null) {\r\n                            that.middleWare?.[storeName].afterWare.push(afterWare)\r\n                        }\r\n                        else if (beforeWare !== null) {\r\n                            that.middleWare?.[storeName].beforeWare.push(beforeWare)\r\n                        }\r\n                    },\r\n                    getSelector: (selectorName) => {\r\n                        return that.selectors[storeName][selectorName]\r\n                    },\r\n                    getSelectors: () => {\r\n                        return that.selectors[storeName]\r\n                    },\r\n                    createSelector: function createSelector(selectorName, ...args) {\r\n                        that.selectors[storeName][selectorName] = args\r\n                    },\r\n                    getMiddleWare: () => {\r\n                        return that.middleWare[storeName]\r\n                    },\r\n                    undo: () => {\r\n                        const history = store.getHistory()\r\n\r\n                        if (history.undo.length > 0) {\r\n                            let lastState = history.undo.pop()\r\n                            let currentState = store.getState()\r\n                            history.redo.push(currentState)\r\n                            that.dispatchReducerListeners(storeName, lastState, true)\r\n                        } else {\r\n                            console.log('Nothing to undo')\r\n                        }\r\n                    },\r\n                    redo: () => {\r\n                        const history = store.getHistory()\r\n\r\n                        if (history.redo.length > 0) {\r\n                            let nextState = history.redo.pop()\r\n                            let currentState = store.getState()\r\n                            history.undo.push(currentState)\r\n                            that.dispatchReducerListeners(storeName, nextState, true)\r\n                        } else {\r\n                            console.log('Nothing to redo')\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add actions\r\n                for (const actionName in newActions) {\r\n                    store.addAction(actionName, newActions[actionName])\r\n                }\r\n\r\n                // Add before ware\r\n                if (middleWare?.beforeWare) {\r\n                    for (const index in middleWare.beforeWare) {\r\n                        store.addMiddleWare({beforeWare: middleWare.beforeWare[index]})\r\n                    }\r\n                }\r\n\r\n                // Add afterware\r\n                if (middleWare?.afterWare) {\r\n                    for (const index in middleWare.afterWare) {\r\n                        store.addMiddleWare({afterWare: middleWare.afterWare[index]})\r\n                    }\r\n                }\r\n\r\n                // Add selectors\r\n                for (const selectorName in selectors) {\r\n                    store.createSelector(selectorName, ...selectors[selectorName])\r\n                }\r\n\r\n                // Add store object to stores\r\n                that.store[storeName] = store\r\n\r\n                return {\r\n                    name: storeName\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addFuseListener(storeName, func) {\r\n        // If storeName exist in dictionary\r\n        if (this.storeDict[storeName]) {\r\n            // If listeners for storeName were not yet defined\r\n            if (this.listener[storeName] === undefined) {\r\n                // Define listeners for storeName\r\n                this.listener[storeName] = []\r\n            }\r\n\r\n            // Push function to listener\r\n            this.listener[storeName].push(func)\r\n        } else {\r\n            console.warn(\"Reducer doesn't exist\")\r\n        }\r\n    }\r\n\r\n    removeFuseListener(storeName, func) {\r\n        // If storeName exist in dictionary\r\n        if (this.storeDict.includes(storeName)) {\r\n            // Get listeners for reducer\r\n            const reducerListener = this.listener?.[storeName]\r\n\r\n            // If reducer listener is not undefined\r\n            if (reducerListener !== undefined) {\r\n                // Get index of function to remove from reducer listener\r\n                const indexToRemove = reducerListener.indexOf(func)\r\n\r\n                // Remove listening function from reducer listener\r\n                this.listener[storeName].splice(indexToRemove, indexToRemove + 1)\r\n            } else {\r\n                // Reducer does not exist\r\n                console.warn(\"Reducer doesn't exist\")\r\n            }\r\n        } else {\r\n            // Reducer does not exist\r\n            console.warn(\"Reducer doesn't exist\")\r\n        }\r\n    }\r\n\r\n    dispatchReducerListeners(storeName, result, dontSaveToHistory = false) {\r\n        // If there is a result to push\r\n        if (result !== undefined) {\r\n            if (dontSaveToHistory === false) {\r\n                if (this.history[storeName].redo.length !== 0) {\r\n                    this.history[storeName].redo = []\r\n                }\r\n            }\r\n            const undoCount = this.history[storeName]?.undo.length\r\n            const currentState = this.getCurrentState(storeName)\r\n            if (dontSaveToHistory === false) {\r\n                if ((undoCount !== 0 && this.history[storeName]?.undo[undoCount - 1] !== currentState) || undoCount === 0) {\r\n                    this.history[storeName].undo.push(this.getCurrentState(storeName))\r\n                }\r\n            }\r\n\r\n            // Set State\r\n            this.state[storeName] = {\r\n                ...this.getCurrentState(storeName),\r\n                ...result\r\n            }\r\n\r\n            // If storeName exist in listeners\r\n            if (this.listener[storeName] !== undefined) {\r\n                // For each function listening\r\n                for (let i = 0; i < this.listener[storeName].length; i++) {\r\n                    // Dispatch listening functions\r\n                    this.listener[storeName][i](this.state[storeName])\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentState(storeName) {\r\n        return this.state[storeName]\r\n    }\r\n\r\n    getAction(storeName, actionName) {\r\n        return this.actions?.[storeName]?.[actionName] ?? null\r\n    }\r\n\r\n    async getFromMiddleWare(storeName) {\r\n        return (middleWare, { type = '', payload = null }) => {\r\n            let middleWareSelection = middleWare(storeName)\r\n            let executeMiddleWare = middleWareSelection(this.getCurrentState(storeName))\r\n            let isAsync = executeMiddleWare.constructor.name === 'AsyncFunction'\r\n\r\n            if (isAsync === true) {\r\n                return async () => await executeMiddleWare({ type, payload })\r\n            } else {\r\n                return () => executeMiddleWare({ type, payload })\r\n            }\r\n        }\r\n    }\r\n\r\n    async runAction(storeName, action, payload) {\r\n        // Initialize results\r\n        let result\r\n        \r\n        // Create stores object\r\n        const stores = Object.keys(this.store).reduce((previous, current) => {\r\n            previous[this.store[current].name] = {\r\n                state: this.store[current].getState(),\r\n                actions: this.store[current].getActions()\r\n            }\r\n\r\n            return previous\r\n        }, {})\r\n\r\n        // Get store\r\n        const store = stores[storeName]\r\n        \r\n        // Get store actions\r\n        const actions = store.actions\r\n\r\n        // If action is a function\r\n        if (action instanceof Function) {\r\n            // Get result of action\r\n            result = action({\r\n                state: this.getCurrentState(storeName),\r\n                payload: payload,\r\n                ...(this.props[storeName] !== null && {props: this.props[storeName]})\r\n            }, actions, stores)\r\n\r\n            // If is async\r\n            if (isPromise(result)) {\r\n                result = await result\r\n            }\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    dispatch = (storeName) => async ({ type = '', payload = null }) => {\r\n            let action = (this.getAction(storeName, type)).function\r\n\r\n            if (action === null) {\r\n                console.error('Action or reducer doesnt exist')\r\n                return\r\n            }\r\n\r\n            // Get middleWare\r\n            const beforeWare = this.middleWare?.[storeName]?.beforeWare ?? []\r\n            const afterWare = this.middleWare?.[storeName]?.afterWare ?? []\r\n            const runMiddleWare = await this.getFromMiddleWare(storeName)\r\n\r\n            // Dispatch before ware\r\n            if (beforeWare.length !== 0) {\r\n                for (let i = 0; i < beforeWare.length; i++) {\r\n                    const middleWareIsAsync = isAsync(beforeWare[i])\r\n                    let result\r\n                    const executeMiddleWare = runMiddleWare(beforeWare[i], {\r\n                        type,\r\n                        payload\r\n                    })\r\n\r\n                    if (middleWareIsAsync) {\r\n                        result = await executeMiddleWare()\r\n                    } else {\r\n                        result = executeMiddleWare()\r\n                    }\r\n\r\n                    this.dispatchReducerListeners(storeName, result)\r\n                }\r\n            }\r\n\r\n            // Dispatch action\r\n            let result = await this.runAction(storeName, action, payload)\r\n            this.dispatchReducerListeners(storeName, result)\r\n\r\n            // Dispatch after ware\r\n            if (afterWare.length !== 0) {\r\n                for (let i = 0; i < afterWare.length; i++) {\r\n                    const middleWareIsAsync = isAsync(afterWare[i])\r\n                    let result\r\n                    const executeMiddleWare = runMiddleWare(afterWare[i], {\r\n                        type,\r\n                        payload\r\n                    })\r\n\r\n                    if (middleWareIsAsync) {\r\n                        result = await executeMiddleWare()\r\n                    } else {\r\n                        result = executeMiddleWare()\r\n                    }\r\n\r\n                    this.dispatchReducerListeners(storeName, result)\r\n                }\r\n            }\r\n\r\n            return this.state[storeName]\r\n        }\r\n}\r\n\r\nfunction isPromise(p) {\r\n    if (typeof p === 'object' && typeof p.then === 'function') {\r\n      return true;\r\n    }\r\n  \r\n    return false;\r\n}\r\n\r\nfunction isAsyncAction(func, actions) {\r\n    try {\r\n        return func.constructor.name === 'AsyncFunction' || isPromise(func({}, actions))\r\n    }\r\n    catch(e) {\r\n        return false\r\n    }\r\n}\r\n\r\nfunction isAsync(func) {\r\n    try {\r\n        return func.constructor.name === 'AsyncFunction' || isPromise(func({}, {}))\r\n    }\r\n    catch(e) {\r\n        return false\r\n    }\r\n}\r\nexport default new StateMachine()\r\n","import React, { useLayoutEffect, useMemo, useState } from 'react'\r\nimport StateMachine from './StateMachine'\r\n\r\nfunction useActions(store) {\r\n    return StateMachine.store[store.name].getActions()\r\n}\r\n\r\nfunction useDispatch(store) {\r\n    return StateMachine.store[store.name].dispatch\r\n}\r\n\r\nfunction useFuse(store) {\r\n    const [fuse, setFuse] = useState(StateMachine.store[store.name].getState())\r\n\r\n    useLayoutEffect(() => {\r\n        const handleReducerChange = (newStore) => {\r\n            setFuse(newStore)\r\n        }\r\n\r\n        StateMachine.addFuseListener(store.name, handleReducerChange)\r\n\r\n        return () => {\r\n            StateMachine.removeFuseListener(store.name, handleReducerChange)\r\n        }\r\n    }, [])\r\n\r\n    return fuse\r\n}\r\n\r\nfunction useSelectors(store) {\r\n    return StateMachine.store[store.name].getSelectors()\r\n}\r\n\r\nfunction mergeSelectors(selector, currentState) {\r\n    let stateSelections, value\r\n    \r\n    if (selector.length === 0) {\r\n        throw 'DiffuseError: No selectors specified'\r\n    }\r\n\r\n    if (selector.length === 1) {\r\n        value = selector[0](currentState)\r\n    }\r\n    else {\r\n        const selectors = [...selector]\r\n        let lastSelector = selectors.pop()\r\n        \r\n        stateSelections = selectors.map((arg) => {\r\n            return arg(currentState)\r\n        })\r\n\r\n        value = lastSelector\r\n    }\r\n\r\n    return {\r\n        value,\r\n        ...(stateSelections && {stateSelections: stateSelections})\r\n    }\r\n}\r\n\r\nfunction useFuseSelection(store, selector) {\r\n    let selection = mergeSelectors(selector, StateMachine.store[store.name].getState())\r\n    const [fuseSelection, setFuseSelection] = useState(selection)\r\n\r\n    useLayoutEffect(() => {\r\n        const handleReducerChange = (newStore) => {\r\n            const newFuseSelection = mergeSelectors(selector, newStore)\r\n            let shouldUpdate = false\r\n            if (newFuseSelection.value instanceof Function) {\r\n                for (let i = 0; i < newFuseSelection.stateSelections.length; i++) {\r\n                    if (newFuseSelection.stateSelections[i] !== fuseSelection.stateSelections[i]) {\r\n                        shouldUpdate = true\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            else if (newFuseSelection.value !== fuseSelection.value) {\r\n                shouldUpdate = true      \r\n            }  \r\n\r\n            if (shouldUpdate) {\r\n                setFuseSelection(newFuseSelection)\r\n            }\r\n        }\r\n\r\n        StateMachine.addFuseListener(store.name, handleReducerChange)\r\n\r\n        return () => {\r\n            StateMachine.removeFuseListener(store.name, handleReducerChange)\r\n        }\r\n    }, [])\r\n\r\n    if (fuseSelection.value instanceof Function) {\r\n        return fuseSelection.value(...fuseSelection.stateSelections)\r\n    }\r\n    else {\r\n        return fuseSelection.value\r\n    }\r\n}\r\n\r\n/**\r\n * Connects Child to a specified fuse\r\n * @param {string} fuseName Fuse to reference\r\n * @param {Component} Child Component to reference\r\n * @returns Wired component\r\n */\r\nconst connectWire = (store, Child) => (props) => {\r\n    // Get from fuse\r\n    const context = useFuse(store)\r\n\r\n    // Get dispatch for fuse\r\n    const dispatch = useDispatch(store)\r\n\r\n    const actions = useActions(store)\r\n\r\n    // Get fuse\r\n    const fuse = {\r\n        [store.name]: {\r\n            store: context,\r\n            dispatch: dispatch,\r\n            actions: actions\r\n        }\r\n    }\r\n\r\n    // Set up memoization\r\n    return useMemo(() => <Child {...fuse} {...props} />, [props, context])\r\n}\r\n\r\n/**\r\n * Wires component to a specified fuses\r\n * @param {object} properties\r\n * @param {string} properties.fuseName Fuse to reference\r\n * @param {Component} properties.component Component to reference\r\n * @returns Wired component\r\n */\r\nconst wire = (stores = []) => (Child) => {\r\n    // Set child\r\n    let newChild = Child\r\n\r\n    // Connect all wires to fuses by name\r\n    stores.forEach((store) => {\r\n        newChild = connectWire(store, newChild)\r\n    })\r\n\r\n    return newChild\r\n}\r\n\r\nconst createReducer = StateMachine.createReducer\r\n\r\nexport { wire, useFuse, useActions, useDispatch, useFuseSelection, useSelectors, createReducer }\r\n"],"names":["StateMachine","createReducer","initialState","actions","selectors","middleWare","options","that","defaultOptions","useDiffuseAsync","useDiffuseInitializeState","useDiffuseWebsocket","plugins","config","createStore","storeName","props","diffuseState","diffuse","loading","error","connectionStatus","initState","Object","keys","length","state","newActions","INITIALIZE_STATE","payload","LOADING","SUCCESS","PROGRESS","FAIL","MESSAGE_RECIEVED","EMIT","CONNECT","DISCONNECT","CONNECT_ERROR","history","undo","redo","storeDict","listener","beforeWare","afterWare","store","name","getHistory","getState","getInitialState","dispatch","type","undefined","console","warn","getAction","actionName","getActions","reduce","prev","addAction","action","removeAction","addMiddleWare","push","getSelector","selectorName","getSelectors","createSelector","args","getMiddleWare","lastState","pop","currentState","dispatchReducerListeners","log","nextState","index","getFromMiddleWare","runMiddleWare","runAction","result","i","middleWareIsAsync","isAsync","executeMiddleWare","addFuseListener","func","removeFuseListener","includes","reducerListener","indexToRemove","indexOf","splice","dontSaveToHistory","undoCount","getCurrentState","middleWareSelection","constructor","stores","previous","current","Function","isPromise","p","then","e","useActions","useDispatch","useFuse","useState","fuse","setFuse","useLayoutEffect","handleReducerChange","newStore","useSelectors","mergeSelectors","selector","stateSelections","value","lastSelector","map","arg","useFuseSelection","selection","fuseSelection","setFuseSelection","newFuseSelection","shouldUpdate","connectWire","Child","context","useMemo","wire","newChild","forEach"],"mappings":"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"}