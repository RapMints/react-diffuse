{"version":3,"file":"index.modern.js","sources":["../src/createContext.js","../src/useContextSelector.js","../src/index.js"],"sourcesContent":["import React, {\r\n    createContext as createContextOriginal,\r\n    useEffect,\r\n    useRef\r\n  } from \"react\";\r\n  \r\nexport const ORIGINAL_PROVIDER = Symbol();\r\n\r\nfunction createProvider(ProviderOriginal) {\r\n    return ({ value, children }) => {\r\n        const valueRef = useRef(value);\r\n        const listenersRef = useRef(new Set());\r\n        const contextValue = useRef({\r\n        value: valueRef,\r\n        registerListener: (listener) => {\r\n            listenersRef.current.add(listener);\r\n            return () => listenersRef.current.delete(listener);\r\n        },\r\n        listeners: new Set()\r\n        });\r\n\r\n        useEffect(() => {\r\n        valueRef.current = value;\r\n        listenersRef.current.forEach((listener) => {\r\n            listener(value);\r\n        });\r\n        }, [value]);\r\n\r\n        return (\r\n        <ProviderOriginal value={contextValue.current}>\r\n            {children}\r\n        </ProviderOriginal>\r\n        );\r\n    };\r\n}\r\n\r\nexport default function createContext(defaultValue) {\r\nconst context = createContextOriginal({\r\n    value: {\r\n        current: defaultValue\r\n    },\r\n    register: () => {\r\n        return () => {};\r\n    }\r\n});\r\n\r\ndelete context.Consumer;\r\n\r\ncontext.Provider = createProvider(context.Provider);\r\n\r\nreturn context;\r\n}\r\n  ","import { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function useContextSelector(context, selector) {\r\n  const { value, registerListener } = useContext(context);\r\n  const selectorRef = useRef(selector);\r\n  const [selectedValue, setSelectedValue] = useState(() =>\r\n    selector(value.current)\r\n  );\r\n\r\n  useEffect(() => {\r\n    selectorRef.current = selector;\r\n  });\r\n\r\n  useEffect(() => {\r\n    const updateValueIfNeeded = (newValue) => {\r\n      const newSelectedValue = selectorRef.current(newValue);\r\n      setSelectedValue(() => newSelectedValue);\r\n    };\r\n\r\n    const unregisterListener = registerListener(updateValueIfNeeded);\r\n\r\n    return unregisterListener;\r\n  }, [registerListener, value]);\r\n\r\n  return selectedValue;\r\n}\r\n","/************************************************\r\n * React Diffuse\r\n * @description Global state management solution\r\n * @copyright 2022 RAPMINTS, LLC. All rights reserved.\r\n * @author Kyle Watkins, Paul Scala\r\n * @example https://codesandbox.io/s/wispy-leaf-iyp9k6\r\n ************************************************/\r\nimport React, { useEffect, useMemo, useState } from 'react'\r\nimport createContext from './createContext'\r\nimport useContextSelector from './useContextSelector'\r\n\r\n// Create diffuse context\r\nconst DiffuseContext = createContext()\r\nconst DiffuseActionContext = createContext()\r\nconst DiffuseDispatchContext = createContext()\r\n\r\nconst useFuseSelector = (selection) => {\r\n  return useContextSelector(DiffuseContext, selection)\r\n}\r\n\r\nconst useAction = (selection) => {\r\n  return useContextSelector(DiffuseActionContext, selection)\r\n}\r\n\r\n/**\r\n * Wires component to a specified fuse\r\n * @param {object} properties\r\n * @param {string} properties.fuseName Fuse to reference\r\n * @param {Component} properties.component Component to reference\r\n * @returns Wired component\r\n */\r\nconst wire =\r\n  ({ fuseName = [], Child }) =>\r\n  (props) => {\r\n    // Use diffusion context\r\n    const fuses = {}\r\n    const memoConstraint = []\r\n    for (let i = 0; i < fuseName.length; i++) {\r\n      let context =  useContextSelector(DiffuseContext, cntxt => cntxt[fuseName[i]])\r\n      let actionContext = useContextSelector(DiffuseActionContext, cntxt => cntxt[fuseName[i]])\r\n      fuses[fuseName[i]] = {\r\n        store: context,\r\n        actions: actionContext\r\n      }\r\n      memoConstraint.push(context.store)\r\n    }\r\n\r\n    // Set up memoization\r\n    return useMemo(\r\n      () => <Child {...fuses} {...props} />,\r\n      [props, ...memoConstraint]\r\n    )\r\n  }\r\n\r\n/**\r\n * Reduce\r\n * @param {object} reducer Reducer\r\n * @param {object} initialState Initial state\r\n * @param {object} actions Actions\r\n */\r\nconst Reduce = ({\r\n  reducer,\r\n  initialState,\r\n  middleware,\r\n  asyncReducer = null,\r\n  actions,\r\n  asyncActions\r\n}) => {\r\n  // Create initial dispatch\r\n  const [state, dispatch] = React.useState(initialState)\r\n\r\n  // Create enhanced dispatch\r\n  const enhancedDispatch = (newAction) => {\r\n    const res = reducer(newAction.store, newAction)\r\n    if (newAction.store !== res) {\r\n      newAction.store = res\r\n    }\r\n\r\n    dispatch(res)\r\n    return res\r\n  }\r\n\r\n  // Create enhanced async dispatch\r\n  const enhancedAsyncDispatch = async (newAction) => {\r\n    const res = await asyncReducer(newAction, onSuccess, onFail, onProgress, onLoading)\r\n    dispatch(res)\r\n    return (\r\n      res\r\n    ).store\r\n  }\r\n\r\n  // Initialize Default Loading Function\r\n  const onLoading = () => {\r\n    return dispatchWithMiddleWare({ type: 'LOADING' })\r\n  }\r\n\r\n  // Initialize Default Success Function\r\n  const onSuccess = (payload) => {\r\n    return dispatchWithMiddleWare({ type: 'SUCCESS', payload })\r\n  }\r\n\r\n  // Initialize Default Fail Function\r\n  const onFail = (payload) => {\r\n    return dispatchWithMiddleWare({ type: 'FAIL', payload })\r\n  }\r\n\r\n  // Initialize Default Progress functions\r\n  const onProgress = (payload) => {\r\n    return dispatchWithMiddleWare({ type: 'PROGRESS', payload })\r\n  }\r\n\r\n  // Dispatch with middleware\r\n  const dispatchWithMiddleWare = async (action) => {\r\n    // Set new action from action passed through dispatch\r\n    let newAction = action\r\n\r\n    // If store is not defined in action set it\r\n    if (newAction.store === undefined) {\r\n      newAction.store = state\r\n    }\r\n\r\n    // If before ware is available run it\r\n    if (middleware && middleware.beforeWare) {\r\n      middleware.beforeWare.forEach((beforeWare) => {\r\n        beforeWare(newAction)\r\n      })\r\n    }\r\n\r\n    // Async actions are available and the current action is async\r\n    if (\r\n      asyncReducer !== null &&\r\n      Object.keys(asyncActions).includes(newAction.type)\r\n    ) {\r\n      // Get new store from dispatch\r\n      const newStore = await enhancedAsyncDispatch(newAction)\r\n\r\n      // Set new action with new store\r\n      newAction = { ...newAction, store: { ...newStore } }\r\n    } else {\r\n      // Get new store from dispatch\r\n      const newStore = { ...enhancedDispatch(newAction) }\r\n\r\n      // Set new action with new store\r\n      newAction = { ...newAction, store: { ...newStore } }\r\n    }\r\n\r\n    // If afterWare is available run it\r\n    if (middleware && middleware.afterWare) {\r\n      middleware.afterWare.forEach((afterWare) => {\r\n        afterWare(newAction)\r\n      })\r\n    }\r\n\r\n    // Return new action\r\n    return newAction\r\n  }\r\n\r\n  let actionsDispatch = () => {\r\n    let actionKeys = Object.keys(actions)\r\n    let asyncActionKeys = Object.keys(asyncActions)\r\n    let actionDispatch = {}\r\n    actionKeys.map((a)=> {\r\n      actionDispatch[a] = (payload) => dispatchWithMiddleWare({type: a, payload: payload})\r\n    })\r\n\r\n    asyncActionKeys.map((a)=>{\r\n      actionDispatch[a] = async (payload) => dispatchWithMiddleWare({type: a, payload: payload})\r\n    })\r\n\r\n    return actionDispatch\r\n  }\r\n  // Return state as store and dispatch as dispatch middleware\r\n  const value = {\r\n    /**\r\n     * Current state of reducer\r\n     * @type object\r\n     */\r\n    store: state,\r\n    /**\r\n     * @deprecated Use actions instead\r\n     */\r\n    dispatch: dispatchWithMiddleWare,\r\n    /**\r\n     * Dispatch actions for reducer\r\n     * @type object\r\n     */\r\n    actions: actionsDispatch()\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n/**\r\n *\r\n * @param {object[]} values\r\n */\r\nconst MergeReducers = (globalState = []) => {\r\n  // Reduce each state into reducers\r\n  const reducers = globalState.map((state) => {\r\n    return {\r\n      [state.name]: () => {\r\n        const reducer = Reduce({\r\n          reducer: state.reducer,\r\n          initialState: state.initialState,\r\n          middleware: state.middleware,\r\n          asyncReducer: state.asyncReducer,\r\n          actions: state.actions,\r\n          asyncActions: state.asyncActions\r\n        })\r\n        return reducer\r\n      }\r\n    }\r\n  })\r\n\r\n  // Initialize merged reducers\r\n  const mergedReducers = []\r\n\r\n  // Merge reducers into an array\r\n  reducers.map((r) => {\r\n    Object.keys(r).map((key) => {\r\n      mergedReducers.push(r[key])\r\n    })\r\n  })\r\n\r\n  return reducers\r\n}\r\n\r\n/**\r\n * Creates a reducer\r\n * @param {object} initialState Initial reducer state\r\n * @param {object} actions Key value pair of functions\r\n */\r\nconst createReducer = ({\r\n  initialState = {},\r\n  actions = [],\r\n  middleware = { beforeWare: [], afterWare: [] },\r\n  asyncActions = null\r\n}) => {\r\n  // Reducer\r\n  const reducer = {\r\n    initialState: {\r\n      diffuse: {\r\n        loading: false,\r\n        error: false\r\n      },\r\n      ...initialState\r\n    },\r\n    actionsDict: {\r\n      INITIALIZE_STORE: (state, payload = {}) => {\r\n        return {\r\n          diffuse: {\r\n            loading: false,\r\n            error: false\r\n          },\r\n          ...initialState,\r\n          ...payload\r\n        }\r\n      },\r\n      LOADING: (state) => {\r\n        return {\r\n          diffuse: {\r\n            loading: true,\r\n            error: false\r\n          }\r\n        }\r\n      },\r\n      SUCCESS: (state, payload) => {\r\n        return {\r\n          diffuse: {\r\n            loading: false,\r\n            error: false\r\n          },\r\n          ...payload\r\n        }\r\n      },\r\n      PROGRESS: (state, payload) => {\r\n        return {\r\n          ...payload\r\n        }\r\n      },\r\n      FAIL: (state, payload) => {\r\n        return {\r\n          diffuse: {\r\n            loading: false,\r\n            error: true\r\n          },\r\n          ...payload\r\n        }\r\n      }\r\n    },\r\n    asyncActionsDict: {},\r\n    middleware: middleware,\r\n    // Initialized reducer function\r\n    initialize: (name) => ({\r\n      name: name,\r\n      initialState: { ...reducer.initialState },\r\n      reducer: reducer.reducer,\r\n      middleware: middleware,\r\n      asyncReducer: reducer.asyncReducer,\r\n      actions: reducer.actionsDict,\r\n      asyncActions: reducer.asyncActionsDict\r\n    }),\r\n    reducer: (state, action) => {\r\n      // If action exist in dictionary run the action and return the value\r\n      if (action.type in reducer.actionsDict) {\r\n        const res = reducer.actionsDict[action.type](state, action.payload)\r\n        return {\r\n          ...state,\r\n          ...res\r\n        }\r\n      }\r\n    },\r\n    asyncReducer: async (action, onSuccess, onFail, onProgress, onLoading) => {\r\n      onLoading()\r\n      return {\r\n        ...(await reducer.asyncActionsDict[action.type]({\r\n            state: action.store,\r\n            payload: action.payload\r\n          },\r\n          onSuccess,\r\n          onFail,\r\n          onProgress\r\n        )),\r\n        type: action.type\r\n      }\r\n    },\r\n    addAction: (actionName, action) => {\r\n      // Add regular action\r\n      if (action.type === 'action') {\r\n        reducer.actionsDict[actionName] = action.job\r\n      }\r\n      // Add async action\r\n      else if (action.type === 'async') {\r\n        reducer.asyncActionsDict[actionName] = action.job\r\n      }\r\n    },\r\n    removeAction: (actionName) => {\r\n      // Remove action by name\r\n      if (actionName in reducer.actionsDict) {\r\n        delete reducer.actionsDict[actionName]\r\n      }\r\n    },\r\n    getActions: () => {\r\n      // Init actions array\r\n      const actions = []\r\n\r\n      // For each action push to array\r\n      for (const key in reducer.actionsDict) {\r\n        actions.push(reducer.actionsDict[key])\r\n      }\r\n\r\n      // return actions\r\n      return actions\r\n    }\r\n  }\r\n\r\n  // Add actions to dictionary\r\n  for (const key in actions) {\r\n    reducer.addAction(key, actions[key])\r\n  }\r\n\r\n  return reducer\r\n}\r\n\r\nconst getParts = (reducers) => {\r\n  const mergedReducers = MergeReducers(reducers)\r\n  // Init Fuse\r\n  const values = {}\r\n\r\n  const store = {}\r\n\r\n  const actions = {}\r\n  \r\n  const dispatch = {}\r\n\r\n  for (let i = 0; i < mergedReducers.length; i++) {\r\n    let keys = Object.keys(mergedReducers[i])[0]\r\n    values[keys] = mergedReducers[i][keys]()\r\n    store[keys] = values[keys].store\r\n    actions[keys] = values[keys].actions\r\n    dispatch[keys] = values[keys].dispatch\r\n  }\r\n\r\n  const dispatchFunction = (reducerName, action) => {\r\n    dispatch[reducerName](action)\r\n  }\r\n\r\n  return {\r\n    store, dispatch: dispatchFunction\r\n  }\r\n}\r\n/**\r\n * Diffuse Provider\r\n * @param {object} properties Properties for Diffusion\r\n * @param {Component} properties.children Main App\r\n */\r\nconst Diffuse = ({ reducers, children }) => {\r\n  const mergedReducers = getParts(reducers)  \r\n  const [state] = useState({dispatch: mergedReducers.dispatch})\r\n\r\n  // Return diffusion provider\r\n  return (\r\n    <DiffuseContext.Provider value={mergedReducers.store}>  \r\n      <DiffuseActionContext.Provider value={state.dispatch}>\r\n          {children}\r\n      </DiffuseActionContext.Provider>\r\n    </DiffuseContext.Provider>\r\n  )\r\n}\r\n\r\nexport { wire, createReducer, useFuseSelector, useAction }\r\n\r\nexport default Diffuse\r\n"],"names":["createProvider","ProviderOriginal","value","children","valueRef","useRef","listenersRef","Set","contextValue","registerListener","listener","current","add","listeners","useEffect","forEach","createContext","defaultValue","context","createContextOriginal","register","Consumer","Provider","useContextSelector","selector","useContext","selectorRef","useState","selectedValue","setSelectedValue","updateValueIfNeeded","newValue","newSelectedValue","unregisterListener","DiffuseContext","DiffuseActionContext","DiffuseDispatchContext","useFuseSelector","selection","useAction","wire","fuseName","Child","props","fuses","memoConstraint","i","cntxt","actionContext","store","actions","push","length","useMemo","Reduce","reducer","initialState","middleware","asyncReducer","asyncActions","React","state","dispatch","enhancedDispatch","newAction","res","enhancedAsyncDispatch","onSuccess","onFail","onProgress","onLoading","dispatchWithMiddleWare","type","payload","action","afterWare","undefined","beforeWare","Object","keys","includes","newStore","actionsDispatch","actionKeys","asyncActionKeys","actionDispatch","map","a","MergeReducers","globalState","reducers","name","r","key","createReducer","diffuse","loading","error","actionsDict","INITIALIZE_STORE","LOADING","SUCCESS","PROGRESS","FAIL","asyncActionsDict","initialize","addAction","actionName","job","removeAction","getActions","getParts","mergedReducers","values","dispatchFunction","reducerName","Diffuse"],"mappings":"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"}